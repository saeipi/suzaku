// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: pb_ws/ws.proto

package pb_ws

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// base
type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId       string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName     string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Notification  string `protobuf:"bytes,3,opt,name=notification,proto3" json:"notification,omitempty"`
	Introduction  string `protobuf:"bytes,4,opt,name=introduction,proto3" json:"introduction,omitempty"`
	AvatarUrl     string `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	CreatorUserId string `protobuf:"bytes,6,opt,name=creator_user_id,json=creatorUserId,proto3" json:"creator_user_id,omitempty"`
	GroupType     uint32 `protobuf:"varint,7,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`
	Status        uint32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	CreateTs      string `protobuf:"bytes,9,opt,name=create_ts,json=createTs,proto3" json:"create_ts,omitempty"`
	Ex            int32  `protobuf:"varint,10,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{0}
}

func (x *GroupInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupInfo) GetNotification() string {
	if x != nil {
		return x.Notification
	}
	return ""
}

func (x *GroupInfo) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *GroupInfo) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *GroupInfo) GetCreatorUserId() string {
	if x != nil {
		return x.CreatorUserId
	}
	return ""
}

func (x *GroupInfo) GetGroupType() uint32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *GroupInfo) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GroupInfo) GetCreateTs() string {
	if x != nil {
		return x.CreateTs
	}
	return ""
}

func (x *GroupInfo) GetEx() int32 {
	if x != nil {
		return x.Ex
	}
	return 0
}

type GroupMemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId        string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId         string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nickname       string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	UserAvatarUrl  string `protobuf:"bytes,4,opt,name=user_avatar_url,json=userAvatarUrl,proto3" json:"user_avatar_url,omitempty"`
	RoleLevel      int32  `protobuf:"varint,5,opt,name=role_level,json=roleLevel,proto3" json:"role_level,omitempty"`
	JoinTime       int64  `protobuf:"varint,6,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"`
	JoinSource     int32  `protobuf:"varint,7,opt,name=join_source,json=joinSource,proto3" json:"join_source,omitempty"`
	OperatorUserId string `protobuf:"bytes,8,opt,name=operator_user_id,json=operatorUserId,proto3" json:"operator_user_id,omitempty"`
	MuteEndTime    int64  `protobuf:"varint,9,opt,name=mute_end_time,json=muteEndTime,proto3" json:"mute_end_time,omitempty"`
	Ex             string `protobuf:"bytes,10,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *GroupMemberInfo) Reset() {
	*x = GroupMemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMemberInfo) ProtoMessage() {}

func (x *GroupMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMemberInfo.ProtoReflect.Descriptor instead.
func (*GroupMemberInfo) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{1}
}

func (x *GroupMemberInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupMemberInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GroupMemberInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GroupMemberInfo) GetUserAvatarUrl() string {
	if x != nil {
		return x.UserAvatarUrl
	}
	return ""
}

func (x *GroupMemberInfo) GetRoleLevel() int32 {
	if x != nil {
		return x.RoleLevel
	}
	return 0
}

func (x *GroupMemberInfo) GetJoinTime() int64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

func (x *GroupMemberInfo) GetJoinSource() int32 {
	if x != nil {
		return x.JoinSource
	}
	return 0
}

func (x *GroupMemberInfo) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

func (x *GroupMemberInfo) GetMuteEndTime() int64 {
	if x != nil {
		return x.MuteEndTime
	}
	return 0
}

func (x *GroupMemberInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type PublicUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FaceUrl  string `protobuf:"bytes,3,opt,name=face_url,json=faceUrl,proto3" json:"face_url,omitempty"`
	Gender   int32  `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`
}

func (x *PublicUserInfo) Reset() {
	*x = PublicUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicUserInfo) ProtoMessage() {}

func (x *PublicUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicUserInfo.ProtoReflect.Descriptor instead.
func (*PublicUserInfo) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{2}
}

func (x *PublicUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PublicUserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PublicUserInfo) GetFaceUrl() string {
	if x != nil {
		return x.FaceUrl
	}
	return ""
}

func (x *PublicUserInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nickname       string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FaceUrl        string `protobuf:"bytes,3,opt,name=face_url,json=faceUrl,proto3" json:"face_url,omitempty"`
	Gender         int32  `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Mobile         string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Birth          uint32 `protobuf:"varint,6,opt,name=birth,proto3" json:"birth,omitempty"`
	Email          string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Ex             string `protobuf:"bytes,8,opt,name=ex,proto3" json:"ex,omitempty"`
	CreateTime     uint32 `protobuf:"varint,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	AppMangerLevel int32  `protobuf:"varint,10,opt,name=app_manger_level,json=appMangerLevel,proto3" json:"app_manger_level,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{3}
}

func (x *UserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfo) GetFaceUrl() string {
	if x != nil {
		return x.FaceUrl
	}
	return ""
}

func (x *UserInfo) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserInfo) GetBirth() uint32 {
	if x != nil {
		return x.Birth
	}
	return 0
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *UserInfo) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *UserInfo) GetAppMangerLevel() int32 {
	if x != nil {
		return x.AppMangerLevel
	}
	return 0
}

type FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUserId    string    `protobuf:"bytes,1,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	Remark         string    `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateTime     uint32    `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	FriendUser     *UserInfo `protobuf:"bytes,4,opt,name=friend_user,json=friendUser,proto3" json:"friend_user,omitempty"`
	AddSource      int32     `protobuf:"varint,5,opt,name=add_source,json=addSource,proto3" json:"add_source,omitempty"`
	OperatorUserId string    `protobuf:"bytes,6,opt,name=operator_user_id,json=operatorUserId,proto3" json:"operator_user_id,omitempty"`
	Ex             string    `protobuf:"bytes,7,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{4}
}

func (x *FriendInfo) GetOwnerUserId() string {
	if x != nil {
		return x.OwnerUserId
	}
	return ""
}

func (x *FriendInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *FriendInfo) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *FriendInfo) GetFriendUser() *UserInfo {
	if x != nil {
		return x.FriendUser
	}
	return nil
}

func (x *FriendInfo) GetAddSource() int32 {
	if x != nil {
		return x.AddSource
	}
	return 0
}

func (x *FriendInfo) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

func (x *FriendInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type BlackInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUserId    string          `protobuf:"bytes,1,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	CreateTime     uint32          `protobuf:"varint,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	BlackUserInfo  *PublicUserInfo `protobuf:"bytes,3,opt,name=black_user_info,json=blackUserInfo,proto3" json:"black_user_info,omitempty"`
	AddSource      int32           `protobuf:"varint,4,opt,name=add_source,json=addSource,proto3" json:"add_source,omitempty"`
	OperatorUserId string          `protobuf:"bytes,5,opt,name=operator_user_id,json=operatorUserId,proto3" json:"operator_user_id,omitempty"`
	Ex             string          `protobuf:"bytes,6,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *BlackInfo) Reset() {
	*x = BlackInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackInfo) ProtoMessage() {}

func (x *BlackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackInfo.ProtoReflect.Descriptor instead.
func (*BlackInfo) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{5}
}

func (x *BlackInfo) GetOwnerUserId() string {
	if x != nil {
		return x.OwnerUserId
	}
	return ""
}

func (x *BlackInfo) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *BlackInfo) GetBlackUserInfo() *PublicUserInfo {
	if x != nil {
		return x.BlackUserInfo
	}
	return nil
}

func (x *BlackInfo) GetAddSource() int32 {
	if x != nil {
		return x.AddSource
	}
	return 0
}

func (x *BlackInfo) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

func (x *BlackInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type GroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo     *PublicUserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	GroupInfo    *GroupInfo      `protobuf:"bytes,2,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
	HandleResult int32           `protobuf:"varint,3,opt,name=handle_result,json=handleResult,proto3" json:"handle_result,omitempty"`
	ReqMsg       string          `protobuf:"bytes,4,opt,name=req_msg,json=reqMsg,proto3" json:"req_msg,omitempty"`
	HandleMsg    string          `protobuf:"bytes,5,opt,name=handle_msg,json=handleMsg,proto3" json:"handle_msg,omitempty"`
	ReqTime      uint32          `protobuf:"varint,6,opt,name=req_time,json=reqTime,proto3" json:"req_time,omitempty"`
	HandleUserId string          `protobuf:"bytes,7,opt,name=handle_user_id,json=handleUserId,proto3" json:"handle_user_id,omitempty"`
	HandleTime   uint32          `protobuf:"varint,8,opt,name=handle_time,json=handleTime,proto3" json:"handle_time,omitempty"`
	Ex           string          `protobuf:"bytes,9,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *GroupRequest) Reset() {
	*x = GroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRequest) ProtoMessage() {}

func (x *GroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRequest.ProtoReflect.Descriptor instead.
func (*GroupRequest) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{6}
}

func (x *GroupRequest) GetUserInfo() *PublicUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *GroupRequest) GetGroupInfo() *GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

func (x *GroupRequest) GetHandleResult() int32 {
	if x != nil {
		return x.HandleResult
	}
	return 0
}

func (x *GroupRequest) GetReqMsg() string {
	if x != nil {
		return x.ReqMsg
	}
	return ""
}

func (x *GroupRequest) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

func (x *GroupRequest) GetReqTime() uint32 {
	if x != nil {
		return x.ReqTime
	}
	return 0
}

func (x *GroupRequest) GetHandleUserId() string {
	if x != nil {
		return x.HandleUserId
	}
	return ""
}

func (x *GroupRequest) GetHandleTime() uint32 {
	if x != nil {
		return x.HandleTime
	}
	return 0
}

func (x *GroupRequest) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type FriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserId   string `protobuf:"bytes,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	FromNickname string `protobuf:"bytes,2,opt,name=from_nickname,json=fromNickname,proto3" json:"from_nickname,omitempty"`
	FromFaceUrl  string `protobuf:"bytes,3,opt,name=from_face_url,json=fromFaceUrl,proto3" json:"from_face_url,omitempty"`
	FromGender   int32  `protobuf:"varint,4,opt,name=from_gender,json=fromGender,proto3" json:"from_gender,omitempty"`
	ToUserId     string `protobuf:"bytes,5,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	ToNickname   string `protobuf:"bytes,6,opt,name=to_nickname,json=toNickname,proto3" json:"to_nickname,omitempty"`
	ToFaceUrl    string `protobuf:"bytes,7,opt,name=to_face_url,json=toFaceUrl,proto3" json:"to_face_url,omitempty"`
	ToGender     int32  `protobuf:"varint,8,opt,name=to_gender,json=toGender,proto3" json:"to_gender,omitempty"`
	HandleResult int32  `protobuf:"varint,9,opt,name=handle_result,json=handleResult,proto3" json:"handle_result,omitempty"`
	ReqMsg       string `protobuf:"bytes,10,opt,name=req_msg,json=reqMsg,proto3" json:"req_msg,omitempty"`
	CreateTime   uint32 `protobuf:"varint,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	HandleUserId string `protobuf:"bytes,12,opt,name=handle_user_id,json=handleUserId,proto3" json:"handle_user_id,omitempty"`
	HandleMsg    string `protobuf:"bytes,13,opt,name=handle_msg,json=handleMsg,proto3" json:"handle_msg,omitempty"`
	HandleTime   uint32 `protobuf:"varint,14,opt,name=handle_time,json=handleTime,proto3" json:"handle_time,omitempty"`
	Ex           string `protobuf:"bytes,15,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *FriendRequest) Reset() {
	*x = FriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequest) ProtoMessage() {}

func (x *FriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequest.ProtoReflect.Descriptor instead.
func (*FriendRequest) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{7}
}

func (x *FriendRequest) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *FriendRequest) GetFromNickname() string {
	if x != nil {
		return x.FromNickname
	}
	return ""
}

func (x *FriendRequest) GetFromFaceUrl() string {
	if x != nil {
		return x.FromFaceUrl
	}
	return ""
}

func (x *FriendRequest) GetFromGender() int32 {
	if x != nil {
		return x.FromGender
	}
	return 0
}

func (x *FriendRequest) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

func (x *FriendRequest) GetToNickname() string {
	if x != nil {
		return x.ToNickname
	}
	return ""
}

func (x *FriendRequest) GetToFaceUrl() string {
	if x != nil {
		return x.ToFaceUrl
	}
	return ""
}

func (x *FriendRequest) GetToGender() int32 {
	if x != nil {
		return x.ToGender
	}
	return 0
}

func (x *FriendRequest) GetHandleResult() int32 {
	if x != nil {
		return x.HandleResult
	}
	return 0
}

func (x *FriendRequest) GetReqMsg() string {
	if x != nil {
		return x.ReqMsg
	}
	return ""
}

func (x *FriendRequest) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *FriendRequest) GetHandleUserId() string {
	if x != nil {
		return x.HandleUserId
	}
	return ""
}

func (x *FriendRequest) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

func (x *FriendRequest) GetHandleTime() uint32 {
	if x != nil {
		return x.HandleTime
	}
	return 0
}

func (x *FriendRequest) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type PullMessageBySeqListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32      `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg  string     `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	List    []*MsgData `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PullMessageBySeqListResp) Reset() {
	*x = PullMessageBySeqListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullMessageBySeqListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullMessageBySeqListResp) ProtoMessage() {}

func (x *PullMessageBySeqListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullMessageBySeqListResp.ProtoReflect.Descriptor instead.
func (*PullMessageBySeqListResp) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{8}
}

func (x *PullMessageBySeqListResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *PullMessageBySeqListResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *PullMessageBySeqListResp) GetList() []*MsgData {
	if x != nil {
		return x.List
	}
	return nil
}

type PullMessageBySeqListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperationId string   `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	SeqList     []uint32 `protobuf:"varint,3,rep,packed,name=seq_list,json=seqList,proto3" json:"seq_list,omitempty"`
}

func (x *PullMessageBySeqListReq) Reset() {
	*x = PullMessageBySeqListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullMessageBySeqListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullMessageBySeqListReq) ProtoMessage() {}

func (x *PullMessageBySeqListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullMessageBySeqListReq.ProtoReflect.Descriptor instead.
func (*PullMessageBySeqListReq) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{9}
}

func (x *PullMessageBySeqListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PullMessageBySeqListReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *PullMessageBySeqListReq) GetSeqList() []uint32 {
	if x != nil {
		return x.SeqList
	}
	return nil
}

type GetMaxAndMinSeqReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMaxAndMinSeqReq) Reset() {
	*x = GetMaxAndMinSeqReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaxAndMinSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaxAndMinSeqReq) ProtoMessage() {}

func (x *GetMaxAndMinSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaxAndMinSeqReq.ProtoReflect.Descriptor instead.
func (*GetMaxAndMinSeqReq) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{10}
}

type GetMaxAndMinSeqResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxSeq uint32 `protobuf:"varint,1,opt,name=max_seq,json=maxSeq,proto3" json:"max_seq,omitempty"`
	MinSeq uint32 `protobuf:"varint,2,opt,name=min_seq,json=minSeq,proto3" json:"min_seq,omitempty"`
}

func (x *GetMaxAndMinSeqResp) Reset() {
	*x = GetMaxAndMinSeqResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaxAndMinSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaxAndMinSeqResp) ProtoMessage() {}

func (x *GetMaxAndMinSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaxAndMinSeqResp.ProtoReflect.Descriptor instead.
func (*GetMaxAndMinSeqResp) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{11}
}

func (x *GetMaxAndMinSeqResp) GetMaxSeq() uint32 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

func (x *GetMaxAndMinSeqResp) GetMinSeq() uint32 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

type UserSendMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerMsgId string `protobuf:"bytes,1,opt,name=server_msg_id,json=serverMsgId,proto3" json:"server_msg_id,omitempty"`
	ClientMsgId string `protobuf:"bytes,2,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	SendTs      int64  `protobuf:"varint,3,opt,name=send_ts,json=sendTs,proto3" json:"send_ts,omitempty"`
}

func (x *UserSendMsgResp) Reset() {
	*x = UserSendMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSendMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSendMsgResp) ProtoMessage() {}

func (x *UserSendMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSendMsgResp.ProtoReflect.Descriptor instead.
func (*UserSendMsgResp) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{12}
}

func (x *UserSendMsgResp) GetServerMsgId() string {
	if x != nil {
		return x.ServerMsgId
	}
	return ""
}

func (x *UserSendMsgResp) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

func (x *UserSendMsgResp) GetSendTs() int64 {
	if x != nil {
		return x.SendTs
	}
	return 0
}

type MsgData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendId           string           `protobuf:"bytes,1,opt,name=send_id,json=sendId,proto3" json:"send_id,omitempty"`
	RecvId           string           `protobuf:"bytes,2,opt,name=recv_id,json=recvId,proto3" json:"recv_id,omitempty"`
	GroupId          string           `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ClientMsgId      string           `protobuf:"bytes,4,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	ServerMsgId      string           `protobuf:"bytes,5,opt,name=server_msg_id,json=serverMsgId,proto3" json:"server_msg_id,omitempty"`
	SenderPlatformId int32            `protobuf:"varint,6,opt,name=sender_platform_id,json=senderPlatformId,proto3" json:"sender_platform_id,omitempty"`
	SenderNickname   string           `protobuf:"bytes,7,opt,name=sender_nickname,json=senderNickname,proto3" json:"sender_nickname,omitempty"`      // 待确认是否可以删除
	SenderAvatarUrl  string           `protobuf:"bytes,8,opt,name=sender_avatar_url,json=senderAvatarUrl,proto3" json:"sender_avatar_url,omitempty"` // 待确认是否可以删除
	SessionType      int32            `protobuf:"varint,9,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	MsgFrom          int32            `protobuf:"varint,10,opt,name=msg_from,json=msgFrom,proto3" json:"msg_from,omitempty"`
	ContentType      int32            `protobuf:"varint,11,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Content          []byte           `protobuf:"bytes,12,opt,name=content,proto3" json:"content,omitempty"`
	Seq              uint32           `protobuf:"varint,14,opt,name=seq,proto3" json:"seq,omitempty"`
	SendTs           int64            `protobuf:"varint,15,opt,name=send_ts,json=sendTs,proto3" json:"send_ts,omitempty"`
	CreatedTs        int64            `protobuf:"varint,16,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`
	Status           int32            `protobuf:"varint,17,opt,name=status,proto3" json:"status,omitempty"`
	Options          map[string]bool  `protobuf:"bytes,18,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	OfflinePushInfo  *OfflinePushInfo `protobuf:"bytes,19,opt,name=offline_push_info,json=offlinePushInfo,proto3" json:"offline_push_info,omitempty"`
}

func (x *MsgData) Reset() {
	*x = MsgData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgData) ProtoMessage() {}

func (x *MsgData) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgData.ProtoReflect.Descriptor instead.
func (*MsgData) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{13}
}

func (x *MsgData) GetSendId() string {
	if x != nil {
		return x.SendId
	}
	return ""
}

func (x *MsgData) GetRecvId() string {
	if x != nil {
		return x.RecvId
	}
	return ""
}

func (x *MsgData) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *MsgData) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

func (x *MsgData) GetServerMsgId() string {
	if x != nil {
		return x.ServerMsgId
	}
	return ""
}

func (x *MsgData) GetSenderPlatformId() int32 {
	if x != nil {
		return x.SenderPlatformId
	}
	return 0
}

func (x *MsgData) GetSenderNickname() string {
	if x != nil {
		return x.SenderNickname
	}
	return ""
}

func (x *MsgData) GetSenderAvatarUrl() string {
	if x != nil {
		return x.SenderAvatarUrl
	}
	return ""
}

func (x *MsgData) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *MsgData) GetMsgFrom() int32 {
	if x != nil {
		return x.MsgFrom
	}
	return 0
}

func (x *MsgData) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *MsgData) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *MsgData) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MsgData) GetSendTs() int64 {
	if x != nil {
		return x.SendTs
	}
	return 0
}

func (x *MsgData) GetCreatedTs() int64 {
	if x != nil {
		return x.CreatedTs
	}
	return 0
}

func (x *MsgData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MsgData) GetOptions() map[string]bool {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *MsgData) GetOfflinePushInfo() *OfflinePushInfo {
	if x != nil {
		return x.OfflinePushInfo
	}
	return nil
}

type OfflinePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc          string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Ex            string `protobuf:"bytes,3,opt,name=ex,proto3" json:"ex,omitempty"`
	IosPushSound  string `protobuf:"bytes,4,opt,name=ios_push_sound,json=iosPushSound,proto3" json:"ios_push_sound,omitempty"`
	IosBadgeCount bool   `protobuf:"varint,5,opt,name=ios_badge_count,json=iosBadgeCount,proto3" json:"ios_badge_count,omitempty"`
}

func (x *OfflinePushInfo) Reset() {
	*x = OfflinePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflinePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflinePushInfo) ProtoMessage() {}

func (x *OfflinePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflinePushInfo.ProtoReflect.Descriptor instead.
func (*OfflinePushInfo) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{14}
}

func (x *OfflinePushInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OfflinePushInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OfflinePushInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *OfflinePushInfo) GetIosPushSound() string {
	if x != nil {
		return x.IosPushSound
	}
	return ""
}

func (x *OfflinePushInfo) GetIosBadgeCount() bool {
	if x != nil {
		return x.IosBadgeCount
	}
	return false
}

type TipsComm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail      []byte `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
	DefaultTips string `protobuf:"bytes,2,opt,name=default_tips,json=defaultTips,proto3" json:"default_tips,omitempty"`
	JsonDetail  string `protobuf:"bytes,3,opt,name=json_detail,json=jsonDetail,proto3" json:"json_detail,omitempty"`
}

func (x *TipsComm) Reset() {
	*x = TipsComm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TipsComm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TipsComm) ProtoMessage() {}

func (x *TipsComm) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TipsComm.ProtoReflect.Descriptor instead.
func (*TipsComm) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{15}
}

func (x *TipsComm) GetDetail() []byte {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *TipsComm) GetDefaultTips() string {
	if x != nil {
		return x.DefaultTips
	}
	return ""
}

func (x *TipsComm) GetJsonDetail() string {
	if x != nil {
		return x.JsonDetail
	}
	return ""
}

// group
// OnGroupCreated()
type GroupCreatedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group          *GroupInfo         `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser         *GroupMemberInfo   `protobuf:"bytes,2,opt,name=op_user,json=opUser,proto3" json:"op_user,omitempty"`
	MemberList     []*GroupMemberInfo `protobuf:"bytes,3,rep,name=member_list,json=memberList,proto3" json:"member_list,omitempty"`
	OperationTime  int64              `protobuf:"varint,4,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
	GroupOwnerUser *GroupMemberInfo   `protobuf:"bytes,5,opt,name=group_owner_user,json=groupOwnerUser,proto3" json:"group_owner_user,omitempty"`
}

func (x *GroupCreatedTips) Reset() {
	*x = GroupCreatedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupCreatedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCreatedTips) ProtoMessage() {}

func (x *GroupCreatedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCreatedTips.ProtoReflect.Descriptor instead.
func (*GroupCreatedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{16}
}

func (x *GroupCreatedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupCreatedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupCreatedTips) GetMemberList() []*GroupMemberInfo {
	if x != nil {
		return x.MemberList
	}
	return nil
}

func (x *GroupCreatedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

func (x *GroupCreatedTips) GetGroupOwnerUser() *GroupMemberInfo {
	if x != nil {
		return x.GroupOwnerUser
	}
	return nil
}

// OnGroupInfoSet()
type GroupInfoSetTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUser   *GroupMemberInfo `protobuf:"bytes,1,opt,name=op_user,json=opUser,proto3" json:"op_user,omitempty"` //who do this
	MuteTime int64            `protobuf:"varint,2,opt,name=mute_time,json=muteTime,proto3" json:"mute_time,omitempty"`
	Group    *GroupInfo       `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupInfoSetTips) Reset() {
	*x = GroupInfoSetTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoSetTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoSetTips) ProtoMessage() {}

func (x *GroupInfoSetTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoSetTips.ProtoReflect.Descriptor instead.
func (*GroupInfoSetTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{17}
}

func (x *GroupInfoSetTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupInfoSetTips) GetMuteTime() int64 {
	if x != nil {
		return x.MuteTime
	}
	return 0
}

func (x *GroupInfoSetTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

// OnJoinGroupApplication()
type JoinGroupApplicationTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group     *GroupInfo      `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Applicant *PublicUserInfo `protobuf:"bytes,2,opt,name=applicant,proto3" json:"applicant,omitempty"`
	ReqMsg    string          `protobuf:"bytes,3,opt,name=req_msg,json=reqMsg,proto3" json:"req_msg,omitempty"`
}

func (x *JoinGroupApplicationTips) Reset() {
	*x = JoinGroupApplicationTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupApplicationTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupApplicationTips) ProtoMessage() {}

func (x *JoinGroupApplicationTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupApplicationTips.ProtoReflect.Descriptor instead.
func (*JoinGroupApplicationTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{18}
}

func (x *JoinGroupApplicationTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *JoinGroupApplicationTips) GetApplicant() *PublicUserInfo {
	if x != nil {
		return x.Applicant
	}
	return nil
}

func (x *JoinGroupApplicationTips) GetReqMsg() string {
	if x != nil {
		return x.ReqMsg
	}
	return ""
}

// OnQuitGroup()
// Actively leave the group
type MemberQuitTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group         *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	QuitUser      *GroupMemberInfo `protobuf:"bytes,2,opt,name=quit_user,json=quitUser,proto3" json:"quit_user,omitempty"`
	OperationTime int64            `protobuf:"varint,3,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
}

func (x *MemberQuitTips) Reset() {
	*x = MemberQuitTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberQuitTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberQuitTips) ProtoMessage() {}

func (x *MemberQuitTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberQuitTips.ProtoReflect.Descriptor instead.
func (*MemberQuitTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{19}
}

func (x *MemberQuitTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MemberQuitTips) GetQuitUser() *GroupMemberInfo {
	if x != nil {
		return x.QuitUser
	}
	return nil
}

func (x *MemberQuitTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

// OnApplicationGroupAccepted()
type GroupApplicationAcceptedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group     *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser    *GroupMemberInfo `protobuf:"bytes,2,opt,name=op_user,json=opUser,proto3" json:"op_user,omitempty"`
	HandleMsg string           `protobuf:"bytes,4,opt,name=handle_msg,json=handleMsg,proto3" json:"handle_msg,omitempty"`
}

func (x *GroupApplicationAcceptedTips) Reset() {
	*x = GroupApplicationAcceptedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupApplicationAcceptedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupApplicationAcceptedTips) ProtoMessage() {}

func (x *GroupApplicationAcceptedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupApplicationAcceptedTips.ProtoReflect.Descriptor instead.
func (*GroupApplicationAcceptedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{20}
}

func (x *GroupApplicationAcceptedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupApplicationAcceptedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupApplicationAcceptedTips) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

// OnApplicationGroupRejected()
type GroupApplicationRejectedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group     *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser    *GroupMemberInfo `protobuf:"bytes,2,opt,name=op_user,json=opUser,proto3" json:"op_user,omitempty"`
	HandleMsg string           `protobuf:"bytes,4,opt,name=handle_msg,json=handleMsg,proto3" json:"handle_msg,omitempty"`
}

func (x *GroupApplicationRejectedTips) Reset() {
	*x = GroupApplicationRejectedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupApplicationRejectedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupApplicationRejectedTips) ProtoMessage() {}

func (x *GroupApplicationRejectedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupApplicationRejectedTips.ProtoReflect.Descriptor instead.
func (*GroupApplicationRejectedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{21}
}

func (x *GroupApplicationRejectedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupApplicationRejectedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupApplicationRejectedTips) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

// OnTransferGroupOwner()
type GroupOwnerTransferredTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group         *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser        *GroupMemberInfo `protobuf:"bytes,2,opt,name=op_user,json=opUser,proto3" json:"op_user,omitempty"`
	NewGroupOwner *GroupMemberInfo `protobuf:"bytes,3,opt,name=new_group_owner,json=newGroupOwner,proto3" json:"new_group_owner,omitempty"`
	OperationTime int64            `protobuf:"varint,4,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
}

func (x *GroupOwnerTransferredTips) Reset() {
	*x = GroupOwnerTransferredTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupOwnerTransferredTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupOwnerTransferredTips) ProtoMessage() {}

func (x *GroupOwnerTransferredTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupOwnerTransferredTips.ProtoReflect.Descriptor instead.
func (*GroupOwnerTransferredTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{22}
}

func (x *GroupOwnerTransferredTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupOwnerTransferredTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupOwnerTransferredTips) GetNewGroupOwner() *GroupMemberInfo {
	if x != nil {
		return x.NewGroupOwner
	}
	return nil
}

func (x *GroupOwnerTransferredTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

// OnMemberKicked()
type MemberKickedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group          *GroupInfo         `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser         *GroupMemberInfo   `protobuf:"bytes,2,opt,name=op_user,json=opUser,proto3" json:"op_user,omitempty"`
	KickedUserList []*GroupMemberInfo `protobuf:"bytes,3,rep,name=kicked_user_list,json=kickedUserList,proto3" json:"kicked_user_list,omitempty"`
	OperationTime  int64              `protobuf:"varint,4,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
}

func (x *MemberKickedTips) Reset() {
	*x = MemberKickedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberKickedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberKickedTips) ProtoMessage() {}

func (x *MemberKickedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberKickedTips.ProtoReflect.Descriptor instead.
func (*MemberKickedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{23}
}

func (x *MemberKickedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MemberKickedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *MemberKickedTips) GetKickedUserList() []*GroupMemberInfo {
	if x != nil {
		return x.KickedUserList
	}
	return nil
}

func (x *MemberKickedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

// OnMemberInvited()
type MemberInvitedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group           *GroupInfo         `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser          *GroupMemberInfo   `protobuf:"bytes,2,opt,name=op_user,json=opUser,proto3" json:"op_user,omitempty"`
	InvitedUserList []*GroupMemberInfo `protobuf:"bytes,3,rep,name=invited_user_list,json=invitedUserList,proto3" json:"invited_user_list,omitempty"`
	OperationTime   int64              `protobuf:"varint,4,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
}

func (x *MemberInvitedTips) Reset() {
	*x = MemberInvitedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInvitedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInvitedTips) ProtoMessage() {}

func (x *MemberInvitedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInvitedTips.ProtoReflect.Descriptor instead.
func (*MemberInvitedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{24}
}

func (x *MemberInvitedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MemberInvitedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *MemberInvitedTips) GetInvitedUserList() []*GroupMemberInfo {
	if x != nil {
		return x.InvitedUserList
	}
	return nil
}

func (x *MemberInvitedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

// Actively join the group
type MemberEnterTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group         *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	EntrantUser   *GroupMemberInfo `protobuf:"bytes,2,opt,name=entrant_user,json=entrantUser,proto3" json:"entrant_user,omitempty"`
	OperationTime int64            `protobuf:"varint,3,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
}

func (x *MemberEnterTips) Reset() {
	*x = MemberEnterTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberEnterTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberEnterTips) ProtoMessage() {}

func (x *MemberEnterTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberEnterTips.ProtoReflect.Descriptor instead.
func (*MemberEnterTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{25}
}

func (x *MemberEnterTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MemberEnterTips) GetEntrantUser() *GroupMemberInfo {
	if x != nil {
		return x.EntrantUser
	}
	return nil
}

func (x *MemberEnterTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

type FriendApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddTime    int64  `protobuf:"varint,1,opt,name=add_time,json=addTime,proto3" json:"add_time,omitempty"`
	AddSource  string `protobuf:"bytes,2,opt,name=add_source,json=addSource,proto3" json:"add_source,omitempty"`
	AddWording string `protobuf:"bytes,3,opt,name=add_wording,json=addWording,proto3" json:"add_wording,omitempty"`
}

func (x *FriendApplication) Reset() {
	*x = FriendApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplication) ProtoMessage() {}

func (x *FriendApplication) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplication.ProtoReflect.Descriptor instead.
func (*FriendApplication) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{26}
}

func (x *FriendApplication) GetAddTime() int64 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *FriendApplication) GetAddSource() string {
	if x != nil {
		return x.AddSource
	}
	return ""
}

func (x *FriendApplication) GetAddWording() string {
	if x != nil {
		return x.AddWording
	}
	return ""
}

type FromToUserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserId string `protobuf:"bytes,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId   string `protobuf:"bytes,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
}

func (x *FromToUserID) Reset() {
	*x = FromToUserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FromToUserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FromToUserID) ProtoMessage() {}

func (x *FromToUserID) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FromToUserID.ProtoReflect.Descriptor instead.
func (*FromToUserID) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{27}
}

func (x *FromToUserID) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *FromToUserID) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

// FromUserID apply to add ToUserID
type FriendApplicationTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserId *FromToUserID `protobuf:"bytes,1,opt,name=from_to_user_id,json=fromToUserId,proto3" json:"from_to_user_id,omitempty"`
}

func (x *FriendApplicationTips) Reset() {
	*x = FriendApplicationTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplicationTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplicationTips) ProtoMessage() {}

func (x *FriendApplicationTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplicationTips.ProtoReflect.Descriptor instead.
func (*FriendApplicationTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{28}
}

func (x *FriendApplicationTips) GetFromToUserId() *FromToUserID {
	if x != nil {
		return x.FromToUserId
	}
	return nil
}

// FromUserID accept or reject ToUserID
type FriendApplicationApprovedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserId *FromToUserID `protobuf:"bytes,1,opt,name=from_to_user_id,json=fromToUserId,proto3" json:"from_to_user_id,omitempty"`
	HandleMsg    string        `protobuf:"bytes,2,opt,name=handle_msg,json=handleMsg,proto3" json:"handle_msg,omitempty"`
}

func (x *FriendApplicationApprovedTips) Reset() {
	*x = FriendApplicationApprovedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplicationApprovedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplicationApprovedTips) ProtoMessage() {}

func (x *FriendApplicationApprovedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplicationApprovedTips.ProtoReflect.Descriptor instead.
func (*FriendApplicationApprovedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{29}
}

func (x *FriendApplicationApprovedTips) GetFromToUserId() *FromToUserID {
	if x != nil {
		return x.FromToUserId
	}
	return nil
}

func (x *FriendApplicationApprovedTips) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

// FromUserID accept or reject ToUserID
type FriendApplicationRejectedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserId *FromToUserID `protobuf:"bytes,1,opt,name=from_to_user_id,json=fromToUserId,proto3" json:"from_to_user_id,omitempty"`
	HandleMsg    string        `protobuf:"bytes,2,opt,name=handle_msg,json=handleMsg,proto3" json:"handle_msg,omitempty"`
}

func (x *FriendApplicationRejectedTips) Reset() {
	*x = FriendApplicationRejectedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplicationRejectedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplicationRejectedTips) ProtoMessage() {}

func (x *FriendApplicationRejectedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplicationRejectedTips.ProtoReflect.Descriptor instead.
func (*FriendApplicationRejectedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{30}
}

func (x *FriendApplicationRejectedTips) GetFromToUserId() *FromToUserID {
	if x != nil {
		return x.FromToUserId
	}
	return nil
}

func (x *FriendApplicationRejectedTips) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

// FromUserID  Added a friend ToUserID
type FriendAddedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friend        *FriendInfo     `protobuf:"bytes,1,opt,name=friend,proto3" json:"friend,omitempty"`
	OperationTime int64           `protobuf:"varint,2,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
	OpUser        *PublicUserInfo `protobuf:"bytes,3,opt,name=op_user,json=opUser,proto3" json:"op_user,omitempty"` //who do this
}

func (x *FriendAddedTips) Reset() {
	*x = FriendAddedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendAddedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendAddedTips) ProtoMessage() {}

func (x *FriendAddedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendAddedTips.ProtoReflect.Descriptor instead.
func (*FriendAddedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{31}
}

func (x *FriendAddedTips) GetFriend() *FriendInfo {
	if x != nil {
		return x.Friend
	}
	return nil
}

func (x *FriendAddedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

func (x *FriendAddedTips) GetOpUser() *PublicUserInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

// FromUserID  deleted a friend ToUserID
type FriendDeletedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserId *FromToUserID `protobuf:"bytes,1,opt,name=from_to_user_id,json=fromToUserId,proto3" json:"from_to_user_id,omitempty"`
}

func (x *FriendDeletedTips) Reset() {
	*x = FriendDeletedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendDeletedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendDeletedTips) ProtoMessage() {}

func (x *FriendDeletedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendDeletedTips.ProtoReflect.Descriptor instead.
func (*FriendDeletedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{32}
}

func (x *FriendDeletedTips) GetFromToUserId() *FromToUserID {
	if x != nil {
		return x.FromToUserId
	}
	return nil
}

type BlackAddedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserId *FromToUserID `protobuf:"bytes,1,opt,name=from_to_user_id,json=fromToUserId,proto3" json:"from_to_user_id,omitempty"`
}

func (x *BlackAddedTips) Reset() {
	*x = BlackAddedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlackAddedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackAddedTips) ProtoMessage() {}

func (x *BlackAddedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackAddedTips.ProtoReflect.Descriptor instead.
func (*BlackAddedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{33}
}

func (x *BlackAddedTips) GetFromToUserId() *FromToUserID {
	if x != nil {
		return x.FromToUserId
	}
	return nil
}

type BlackDeletedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserId *FromToUserID `protobuf:"bytes,1,opt,name=from_to_user_id,json=fromToUserId,proto3" json:"from_to_user_id,omitempty"`
}

func (x *BlackDeletedTips) Reset() {
	*x = BlackDeletedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlackDeletedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackDeletedTips) ProtoMessage() {}

func (x *BlackDeletedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackDeletedTips.ProtoReflect.Descriptor instead.
func (*BlackDeletedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{34}
}

func (x *BlackDeletedTips) GetFromToUserId() *FromToUserID {
	if x != nil {
		return x.FromToUserId
	}
	return nil
}

type FriendInfoChangedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserId *FromToUserID `protobuf:"bytes,1,opt,name=from_to_user_id,json=fromToUserId,proto3" json:"from_to_user_id,omitempty"`
}

func (x *FriendInfoChangedTips) Reset() {
	*x = FriendInfoChangedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfoChangedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfoChangedTips) ProtoMessage() {}

func (x *FriendInfoChangedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfoChangedTips.ProtoReflect.Descriptor instead.
func (*FriendInfoChangedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{35}
}

func (x *FriendInfoChangedTips) GetFromToUserId() *FromToUserID {
	if x != nil {
		return x.FromToUserId
	}
	return nil
}

//////////////////////user/////////////////////
type UserInfoUpdatedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserInfoUpdatedTips) Reset() {
	*x = UserInfoUpdatedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoUpdatedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoUpdatedTips) ProtoMessage() {}

func (x *UserInfoUpdatedTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoUpdatedTips.ProtoReflect.Descriptor instead.
func (*UserInfoUpdatedTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{36}
}

func (x *UserInfoUpdatedTips) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

//////////////////////conversation/////////////////////
type ConversationUpdateTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ConversationUpdateTips) Reset() {
	*x = ConversationUpdateTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationUpdateTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationUpdateTips) ProtoMessage() {}

func (x *ConversationUpdateTips) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationUpdateTips.ProtoReflect.Descriptor instead.
func (*ConversationUpdateTips) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{37}
}

func (x *ConversationUpdateTips) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// callback
type CommonCallbackURLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallBackCommand string `protobuf:"bytes,1,opt,name=call_back_command,json=code,proto3" json:"call_back_command,omitempty"`
	OpenImServerId  string `protobuf:"bytes,2,opt,name=open_im_server_id,json=openImServerId,proto3" json:"open_im_server_id,omitempty"`
	OperationId     string `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *CommonCallbackURLReq) Reset() {
	*x = CommonCallbackURLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonCallbackURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonCallbackURLReq) ProtoMessage() {}

func (x *CommonCallbackURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonCallbackURLReq.ProtoReflect.Descriptor instead.
func (*CommonCallbackURLReq) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{38}
}

func (x *CommonCallbackURLReq) GetCallBackCommand() string {
	if x != nil {
		return x.CallBackCommand
	}
	return ""
}

func (x *CommonCallbackURLReq) GetOpenImServerId() string {
	if x != nil {
		return x.OpenImServerId
	}
	return ""
}

func (x *CommonCallbackURLReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type CommonCallbackURLResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg         string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	OperationId string `protobuf:"bytes,3,opt,name=operation_id,json=operationID,proto3" json:"operation_id,omitempty"`
}

func (x *CommonCallbackURLResp) Reset() {
	*x = CommonCallbackURLResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonCallbackURLResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonCallbackURLResp) ProtoMessage() {}

func (x *CommonCallbackURLResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonCallbackURLResp.ProtoReflect.Descriptor instead.
func (*CommonCallbackURLResp) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{39}
}

func (x *CommonCallbackURLResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CommonCallbackURLResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CommonCallbackURLResp) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type CallbackBeforeSendMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonCallbackURLReq `protobuf:"bytes,1,opt,name=common_req,json=commonReq,proto3" json:"common_req,omitempty"`
}

func (x *CallbackBeforeSendMsgReq) Reset() {
	*x = CallbackBeforeSendMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackBeforeSendMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackBeforeSendMsgReq) ProtoMessage() {}

func (x *CallbackBeforeSendMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackBeforeSendMsgReq.ProtoReflect.Descriptor instead.
func (*CallbackBeforeSendMsgReq) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{40}
}

func (x *CallbackBeforeSendMsgReq) GetCommonReq() *CommonCallbackURLReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

type CallbackBeforeSendMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonCallbackURLResp `protobuf:"bytes,1,opt,name=common_resp,json=commonResp,proto3" json:"common_resp,omitempty"`
	FromUserID string                 `protobuf:"bytes,2,opt,name=FromUserID,proto3" json:"FromUserID,omitempty"`
}

func (x *CallbackBeforeSendMsgResp) Reset() {
	*x = CallbackBeforeSendMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackBeforeSendMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackBeforeSendMsgResp) ProtoMessage() {}

func (x *CallbackBeforeSendMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackBeforeSendMsgResp.ProtoReflect.Descriptor instead.
func (*CallbackBeforeSendMsgResp) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{41}
}

func (x *CallbackBeforeSendMsgResp) GetCommonResp() *CommonCallbackURLResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *CallbackBeforeSendMsgResp) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

type CallbackAfterAddFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonReq *CommonCallbackURLReq `protobuf:"bytes,1,opt,name=common_req,json=commonReq,proto3" json:"common_req,omitempty"`
}

func (x *CallbackAfterAddFriendReq) Reset() {
	*x = CallbackAfterAddFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackAfterAddFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackAfterAddFriendReq) ProtoMessage() {}

func (x *CallbackAfterAddFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackAfterAddFriendReq.ProtoReflect.Descriptor instead.
func (*CallbackAfterAddFriendReq) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{42}
}

func (x *CallbackAfterAddFriendReq) GetCommonReq() *CommonCallbackURLReq {
	if x != nil {
		return x.CommonReq
	}
	return nil
}

type CallbackAfterAddFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonCallbackURLResp `protobuf:"bytes,1,opt,name=common_resp,json=commonResp,proto3" json:"common_resp,omitempty"`
}

func (x *CallbackAfterAddFriendResp) Reset() {
	*x = CallbackAfterAddFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackAfterAddFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackAfterAddFriendResp) ProtoMessage() {}

func (x *CallbackAfterAddFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackAfterAddFriendResp.ProtoReflect.Descriptor instead.
func (*CallbackAfterAddFriendResp) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{43}
}

func (x *CallbackAfterAddFriendResp) GetCommonResp() *CommonCallbackURLResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// cms
type RequestPagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber int32 `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	ShowNumber int32 `protobuf:"varint,2,opt,name=show_number,json=showNumber,proto3" json:"show_number,omitempty"`
}

func (x *RequestPagination) Reset() {
	*x = RequestPagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPagination) ProtoMessage() {}

func (x *RequestPagination) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPagination.ProtoReflect.Descriptor instead.
func (*RequestPagination) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{44}
}

func (x *RequestPagination) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *RequestPagination) GetShowNumber() int32 {
	if x != nil {
		return x.ShowNumber
	}
	return 0
}

type ResponsePagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPage int32 `protobuf:"varint,5,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	ShowNumber  int32 `protobuf:"varint,6,opt,name=show_number,json=showNumber,proto3" json:"show_number,omitempty"`
}

func (x *ResponsePagination) Reset() {
	*x = ResponsePagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_ws_ws_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePagination) ProtoMessage() {}

func (x *ResponsePagination) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ws_ws_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePagination.ProtoReflect.Descriptor instead.
func (*ResponsePagination) Descriptor() ([]byte, []int) {
	return file_pb_ws_ws_proto_rawDescGZIP(), []int{45}
}

func (x *ResponsePagination) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *ResponsePagination) GetShowNumber() int32 {
	if x != nil {
		return x.ShowNumber
	}
	return 0
}

var File_pb_ws_ws_proto protoreflect.FileDescriptor

var file_pb_ws_ws_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2f, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x22, 0xb8, 0x02, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x65, 0x78, 0x22, 0xc4, 0x02, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6a, 0x6f,
	0x69, 0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x75, 0x74, 0x65, 0x5f, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x75,
	0x74, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x22, 0x78, 0x0a, 0x0e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x22, 0x91, 0x02, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x4d, 0x61, 0x6e, 0x67,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xf4, 0x01, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x64, 0x64, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x22, 0xe8,
	0x01, 0x0a, 0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0d,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x3d, 0x0a, 0x0f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x5f,
	0x77, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x64, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x22, 0xc2, 0x02, 0x0a, 0x0c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x23, 0x0a, 0x0d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x22, 0xec,
	0x03, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x4e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x66, 0x72, 0x6f, 0x6d, 0x46, 0x61, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x0a,
	0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x6f, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x74,
	0x6f, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x6f, 0x46, 0x61, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x74, 0x6f, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x22, 0x72, 0x0a,
	0x18, 0x50, 0x75, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x53, 0x65,
	0x71, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x5f, 0x77, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x70, 0x0a, 0x17, 0x50, 0x75, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x79, 0x53, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x71, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64,
	0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x71, 0x22, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x78, 0x41, 0x6e, 0x64, 0x4d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x53,
	0x65, 0x71, 0x22, 0x72, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x54, 0x73, 0x22, 0xb5, 0x05, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x63, 0x76, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73,
	0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x42,
	0x0a, 0x11, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x77,
	0x73, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x99,
	0x01, 0x0a, 0x0f, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x0e, 0x0a, 0x02,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x6f, 0x73, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6f, 0x73, 0x50, 0x75, 0x73, 0x68, 0x53, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6f, 0x73, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6f, 0x73,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x66, 0x0a, 0x08, 0x54, 0x69,
	0x70, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x70,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x22, 0x8d, 0x02, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x2f, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x37, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x40, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f,
	0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x65, 0x74, 0x54, 0x69, 0x70, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x75, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x75, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x90, 0x01,
	0x0a, 0x18, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77,
	0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x71, 0x4d, 0x73, 0x67,
	0x22, 0x94, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x51, 0x75, 0x69, 0x74, 0x54,
	0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x33, 0x0a, 0x09, 0x71,
	0x75, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x71, 0x75, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x1c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x2f, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67,
	0x22, 0x96, 0x01, 0x0a, 0x1c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70,
	0x73, 0x12, 0x26, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2f, 0x0a, 0x07, 0x6f, 0x70, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f,
	0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x22, 0xdb, 0x01, 0x0a, 0x19, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x2f, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x3e, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x77,
	0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62,
	0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x2f, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x10, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd7,
	0x01, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2f, 0x0a, 0x07,
	0x6f, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x42, 0x0a,
	0x11, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62,
	0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f,
	0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6e, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x64, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x77, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x57,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x4e, 0x0a, 0x0c, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72,
	0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x15, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x12,
	0x3a, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73,
	0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0c, 0x66,
	0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x1d, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x3a, 0x0a, 0x0f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x46, 0x72,
	0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x22, 0x7a, 0x0a, 0x1d, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x4d, 0x73, 0x67, 0x22, 0x93, 0x01, 0x0a, 0x0f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x6f, 0x70, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x5f,
	0x77, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x22, 0x4f, 0x0a, 0x11, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x3a,
	0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e,
	0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x0e, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x3a, 0x0a, 0x0f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x46, 0x72,
	0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x10, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x3a, 0x0a, 0x0f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x46, 0x72,
	0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x15, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x54, 0x69, 0x70,
	0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x5f,
	0x77, 0x73, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2e, 0x0a,
	0x13, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31, 0x0a,
	0x16, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x85, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x11, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x69, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x18, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x5f,
	0x77, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x22, 0x7a, 0x0a, 0x19, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3d, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x57,
	0x0a, 0x19, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x66, 0x74, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x5b, 0x0a, 0x1a, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x41, 0x66, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x5f,
	0x77, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x55, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x12, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x1e, 0x5a, 0x1c, 0x73, 0x75, 0x7a, 0x61, 0x6b, 0x75, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x3b,
	0x70, 0x62, 0x5f, 0x77, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_ws_ws_proto_rawDescOnce sync.Once
	file_pb_ws_ws_proto_rawDescData = file_pb_ws_ws_proto_rawDesc
)

func file_pb_ws_ws_proto_rawDescGZIP() []byte {
	file_pb_ws_ws_proto_rawDescOnce.Do(func() {
		file_pb_ws_ws_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_ws_ws_proto_rawDescData)
	})
	return file_pb_ws_ws_proto_rawDescData
}

var file_pb_ws_ws_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_pb_ws_ws_proto_goTypes = []interface{}{
	(*GroupInfo)(nil),                     // 0: pb_ws.GroupInfo
	(*GroupMemberInfo)(nil),               // 1: pb_ws.GroupMemberInfo
	(*PublicUserInfo)(nil),                // 2: pb_ws.PublicUserInfo
	(*UserInfo)(nil),                      // 3: pb_ws.UserInfo
	(*FriendInfo)(nil),                    // 4: pb_ws.FriendInfo
	(*BlackInfo)(nil),                     // 5: pb_ws.BlackInfo
	(*GroupRequest)(nil),                  // 6: pb_ws.GroupRequest
	(*FriendRequest)(nil),                 // 7: pb_ws.FriendRequest
	(*PullMessageBySeqListResp)(nil),      // 8: pb_ws.PullMessageBySeqListResp
	(*PullMessageBySeqListReq)(nil),       // 9: pb_ws.PullMessageBySeqListReq
	(*GetMaxAndMinSeqReq)(nil),            // 10: pb_ws.GetMaxAndMinSeqReq
	(*GetMaxAndMinSeqResp)(nil),           // 11: pb_ws.GetMaxAndMinSeqResp
	(*UserSendMsgResp)(nil),               // 12: pb_ws.UserSendMsgResp
	(*MsgData)(nil),                       // 13: pb_ws.MsgData
	(*OfflinePushInfo)(nil),               // 14: pb_ws.OfflinePushInfo
	(*TipsComm)(nil),                      // 15: pb_ws.TipsComm
	(*GroupCreatedTips)(nil),              // 16: pb_ws.GroupCreatedTips
	(*GroupInfoSetTips)(nil),              // 17: pb_ws.GroupInfoSetTips
	(*JoinGroupApplicationTips)(nil),      // 18: pb_ws.JoinGroupApplicationTips
	(*MemberQuitTips)(nil),                // 19: pb_ws.MemberQuitTips
	(*GroupApplicationAcceptedTips)(nil),  // 20: pb_ws.GroupApplicationAcceptedTips
	(*GroupApplicationRejectedTips)(nil),  // 21: pb_ws.GroupApplicationRejectedTips
	(*GroupOwnerTransferredTips)(nil),     // 22: pb_ws.GroupOwnerTransferredTips
	(*MemberKickedTips)(nil),              // 23: pb_ws.MemberKickedTips
	(*MemberInvitedTips)(nil),             // 24: pb_ws.MemberInvitedTips
	(*MemberEnterTips)(nil),               // 25: pb_ws.MemberEnterTips
	(*FriendApplication)(nil),             // 26: pb_ws.FriendApplication
	(*FromToUserID)(nil),                  // 27: pb_ws.FromToUserID
	(*FriendApplicationTips)(nil),         // 28: pb_ws.FriendApplicationTips
	(*FriendApplicationApprovedTips)(nil), // 29: pb_ws.FriendApplicationApprovedTips
	(*FriendApplicationRejectedTips)(nil), // 30: pb_ws.FriendApplicationRejectedTips
	(*FriendAddedTips)(nil),               // 31: pb_ws.FriendAddedTips
	(*FriendDeletedTips)(nil),             // 32: pb_ws.FriendDeletedTips
	(*BlackAddedTips)(nil),                // 33: pb_ws.BlackAddedTips
	(*BlackDeletedTips)(nil),              // 34: pb_ws.BlackDeletedTips
	(*FriendInfoChangedTips)(nil),         // 35: pb_ws.FriendInfoChangedTips
	(*UserInfoUpdatedTips)(nil),           // 36: pb_ws.UserInfoUpdatedTips
	(*ConversationUpdateTips)(nil),        // 37: pb_ws.ConversationUpdateTips
	(*CommonCallbackURLReq)(nil),          // 38: pb_ws.CommonCallbackURLReq
	(*CommonCallbackURLResp)(nil),         // 39: pb_ws.CommonCallbackURLResp
	(*CallbackBeforeSendMsgReq)(nil),      // 40: pb_ws.CallbackBeforeSendMsgReq
	(*CallbackBeforeSendMsgResp)(nil),     // 41: pb_ws.CallbackBeforeSendMsgResp
	(*CallbackAfterAddFriendReq)(nil),     // 42: pb_ws.CallbackAfterAddFriendReq
	(*CallbackAfterAddFriendResp)(nil),    // 43: pb_ws.CallbackAfterAddFriendResp
	(*RequestPagination)(nil),             // 44: pb_ws.RequestPagination
	(*ResponsePagination)(nil),            // 45: pb_ws.ResponsePagination
	nil,                                   // 46: pb_ws.MsgData.OptionsEntry
}
var file_pb_ws_ws_proto_depIdxs = []int32{
	3,  // 0: pb_ws.FriendInfo.friend_user:type_name -> pb_ws.UserInfo
	2,  // 1: pb_ws.BlackInfo.black_user_info:type_name -> pb_ws.PublicUserInfo
	2,  // 2: pb_ws.GroupRequest.user_info:type_name -> pb_ws.PublicUserInfo
	0,  // 3: pb_ws.GroupRequest.group_info:type_name -> pb_ws.GroupInfo
	13, // 4: pb_ws.PullMessageBySeqListResp.list:type_name -> pb_ws.MsgData
	46, // 5: pb_ws.MsgData.options:type_name -> pb_ws.MsgData.OptionsEntry
	14, // 6: pb_ws.MsgData.offline_push_info:type_name -> pb_ws.OfflinePushInfo
	0,  // 7: pb_ws.GroupCreatedTips.group:type_name -> pb_ws.GroupInfo
	1,  // 8: pb_ws.GroupCreatedTips.op_user:type_name -> pb_ws.GroupMemberInfo
	1,  // 9: pb_ws.GroupCreatedTips.member_list:type_name -> pb_ws.GroupMemberInfo
	1,  // 10: pb_ws.GroupCreatedTips.group_owner_user:type_name -> pb_ws.GroupMemberInfo
	1,  // 11: pb_ws.GroupInfoSetTips.op_user:type_name -> pb_ws.GroupMemberInfo
	0,  // 12: pb_ws.GroupInfoSetTips.group:type_name -> pb_ws.GroupInfo
	0,  // 13: pb_ws.JoinGroupApplicationTips.group:type_name -> pb_ws.GroupInfo
	2,  // 14: pb_ws.JoinGroupApplicationTips.applicant:type_name -> pb_ws.PublicUserInfo
	0,  // 15: pb_ws.MemberQuitTips.group:type_name -> pb_ws.GroupInfo
	1,  // 16: pb_ws.MemberQuitTips.quit_user:type_name -> pb_ws.GroupMemberInfo
	0,  // 17: pb_ws.GroupApplicationAcceptedTips.group:type_name -> pb_ws.GroupInfo
	1,  // 18: pb_ws.GroupApplicationAcceptedTips.op_user:type_name -> pb_ws.GroupMemberInfo
	0,  // 19: pb_ws.GroupApplicationRejectedTips.group:type_name -> pb_ws.GroupInfo
	1,  // 20: pb_ws.GroupApplicationRejectedTips.op_user:type_name -> pb_ws.GroupMemberInfo
	0,  // 21: pb_ws.GroupOwnerTransferredTips.group:type_name -> pb_ws.GroupInfo
	1,  // 22: pb_ws.GroupOwnerTransferredTips.op_user:type_name -> pb_ws.GroupMemberInfo
	1,  // 23: pb_ws.GroupOwnerTransferredTips.new_group_owner:type_name -> pb_ws.GroupMemberInfo
	0,  // 24: pb_ws.MemberKickedTips.group:type_name -> pb_ws.GroupInfo
	1,  // 25: pb_ws.MemberKickedTips.op_user:type_name -> pb_ws.GroupMemberInfo
	1,  // 26: pb_ws.MemberKickedTips.kicked_user_list:type_name -> pb_ws.GroupMemberInfo
	0,  // 27: pb_ws.MemberInvitedTips.group:type_name -> pb_ws.GroupInfo
	1,  // 28: pb_ws.MemberInvitedTips.op_user:type_name -> pb_ws.GroupMemberInfo
	1,  // 29: pb_ws.MemberInvitedTips.invited_user_list:type_name -> pb_ws.GroupMemberInfo
	0,  // 30: pb_ws.MemberEnterTips.group:type_name -> pb_ws.GroupInfo
	1,  // 31: pb_ws.MemberEnterTips.entrant_user:type_name -> pb_ws.GroupMemberInfo
	27, // 32: pb_ws.FriendApplicationTips.from_to_user_id:type_name -> pb_ws.FromToUserID
	27, // 33: pb_ws.FriendApplicationApprovedTips.from_to_user_id:type_name -> pb_ws.FromToUserID
	27, // 34: pb_ws.FriendApplicationRejectedTips.from_to_user_id:type_name -> pb_ws.FromToUserID
	4,  // 35: pb_ws.FriendAddedTips.friend:type_name -> pb_ws.FriendInfo
	2,  // 36: pb_ws.FriendAddedTips.op_user:type_name -> pb_ws.PublicUserInfo
	27, // 37: pb_ws.FriendDeletedTips.from_to_user_id:type_name -> pb_ws.FromToUserID
	27, // 38: pb_ws.BlackAddedTips.from_to_user_id:type_name -> pb_ws.FromToUserID
	27, // 39: pb_ws.BlackDeletedTips.from_to_user_id:type_name -> pb_ws.FromToUserID
	27, // 40: pb_ws.FriendInfoChangedTips.from_to_user_id:type_name -> pb_ws.FromToUserID
	38, // 41: pb_ws.CallbackBeforeSendMsgReq.common_req:type_name -> pb_ws.CommonCallbackURLReq
	39, // 42: pb_ws.CallbackBeforeSendMsgResp.common_resp:type_name -> pb_ws.CommonCallbackURLResp
	38, // 43: pb_ws.CallbackAfterAddFriendReq.common_req:type_name -> pb_ws.CommonCallbackURLReq
	39, // 44: pb_ws.CallbackAfterAddFriendResp.common_resp:type_name -> pb_ws.CommonCallbackURLResp
	45, // [45:45] is the sub-list for method output_type
	45, // [45:45] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_pb_ws_ws_proto_init() }
func file_pb_ws_ws_proto_init() {
	if File_pb_ws_ws_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_ws_ws_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlackInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullMessageBySeqListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullMessageBySeqListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaxAndMinSeqReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaxAndMinSeqResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSendMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflinePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TipsComm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupCreatedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoSetTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupApplicationTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberQuitTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupApplicationAcceptedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupApplicationRejectedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupOwnerTransferredTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberKickedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInvitedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberEnterTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FromToUserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplicationTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplicationApprovedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplicationRejectedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendAddedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendDeletedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlackAddedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlackDeletedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfoChangedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoUpdatedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationUpdateTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonCallbackURLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonCallbackURLResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackBeforeSendMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackBeforeSendMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackAfterAddFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackAfterAddFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_ws_ws_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_ws_ws_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_ws_ws_proto_goTypes,
		DependencyIndexes: file_pb_ws_ws_proto_depIdxs,
		MessageInfos:      file_pb_ws_ws_proto_msgTypes,
	}.Build()
	File_pb_ws_ws_proto = out.File
	file_pb_ws_ws_proto_rawDesc = nil
	file_pb_ws_ws_proto_goTypes = nil
	file_pb_ws_ws_proto_depIdxs = nil
}
