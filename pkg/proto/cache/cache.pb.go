// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: cache/cache.proto

package pb_cache

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	pb_com "suzaku/pkg/proto/pb_com"
	pb_user "suzaku/pkg/proto/pb_user"
	_ "suzaku/pkg/proto/pb_ws"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UPDATE_CACHE_TYPE int32

const (
	UPDATE_CACHE_TYPE_UPDATE_CACHE_TYPE_NONE UPDATE_CACHE_TYPE = 0
	UPDATE_CACHE_TYPE_QUERY                  UPDATE_CACHE_TYPE = 1 // 查询更新
	UPDATE_CACHE_TYPE_VALUE                  UPDATE_CACHE_TYPE = 2 // 传值更新
)

// Enum value maps for UPDATE_CACHE_TYPE.
var (
	UPDATE_CACHE_TYPE_name = map[int32]string{
		0: "UPDATE_CACHE_TYPE_NONE",
		1: "QUERY",
		2: "VALUE",
	}
	UPDATE_CACHE_TYPE_value = map[string]int32{
		"UPDATE_CACHE_TYPE_NONE": 0,
		"QUERY":                  1,
		"VALUE":                  2,
	}
)

func (x UPDATE_CACHE_TYPE) Enum() *UPDATE_CACHE_TYPE {
	p := new(UPDATE_CACHE_TYPE)
	*p = x
	return p
}

func (x UPDATE_CACHE_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UPDATE_CACHE_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_cache_cache_proto_enumTypes[0].Descriptor()
}

func (UPDATE_CACHE_TYPE) Type() protoreflect.EnumType {
	return &file_cache_cache_proto_enumTypes[0]
}

func (x UPDATE_CACHE_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UPDATE_CACHE_TYPE.Descriptor instead.
func (UPDATE_CACHE_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{0}
}

// 更新单个用户信息
type UpdateUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateType UPDATE_CACHE_TYPE `protobuf:"varint,1,opt,name=update_type,json=updateType,proto3,enum=cache.UPDATE_CACHE_TYPE" json:"update_type,omitempty"`
	UserId     string            `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserInfo   *pb_user.UserInfo `protobuf:"bytes,3,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *UpdateUserInfoReq) Reset() {
	*x = UpdateUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoReq) ProtoMessage() {}

func (x *UpdateUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoReq) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateUserInfoReq) GetUpdateType() UPDATE_CACHE_TYPE {
	if x != nil {
		return x.UpdateType
	}
	return UPDATE_CACHE_TYPE_UPDATE_CACHE_TYPE_NONE
}

func (x *UpdateUserInfoReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserInfoReq) GetUserInfo() *pb_user.UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type UpdateUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *UpdateUserInfoResp) Reset() {
	*x = UpdateUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoResp) ProtoMessage() {}

func (x *UpdateUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoResp.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoResp) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateUserInfoResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type GetUserInfoFromCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIdList []string `protobuf:"bytes,1,rep,name=user_id_list,json=userIdList,proto3" json:"user_id_list,omitempty"`
	UserId     string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserInfoFromCacheReq) Reset() {
	*x = GetUserInfoFromCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoFromCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoFromCacheReq) ProtoMessage() {}

func (x *GetUserInfoFromCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoFromCacheReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoFromCacheReq) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserInfoFromCacheReq) GetUserIdList() []string {
	if x != nil {
		return x.UserIdList
	}
	return nil
}

func (x *GetUserInfoFromCacheReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserInfoFromCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common       *pb_com.CommonResp  `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	UserInfoList []*pb_user.UserInfo `protobuf:"bytes,2,rep,name=user_info_list,json=userInfoList,proto3" json:"user_info_list,omitempty"`
}

func (x *GetUserInfoFromCacheResp) Reset() {
	*x = GetUserInfoFromCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoFromCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoFromCacheResp) ProtoMessage() {}

func (x *GetUserInfoFromCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoFromCacheResp.ProtoReflect.Descriptor instead.
func (*GetUserInfoFromCacheResp) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserInfoFromCacheResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetUserInfoFromCacheResp) GetUserInfoList() []*pb_user.UserInfo {
	if x != nil {
		return x.UserInfoList
	}
	return nil
}

type UpdateUserInfoToCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfoList []*pb_user.UserInfo `protobuf:"bytes,1,rep,name=user_info_list,json=userInfoList,proto3" json:"user_info_list,omitempty"`
	OperationId  string              `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *UpdateUserInfoToCacheReq) Reset() {
	*x = UpdateUserInfoToCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoToCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoToCacheReq) ProtoMessage() {}

func (x *UpdateUserInfoToCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoToCacheReq.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoToCacheReq) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserInfoToCacheReq) GetUserInfoList() []*pb_user.UserInfo {
	if x != nil {
		return x.UserInfoList
	}
	return nil
}

func (x *UpdateUserInfoToCacheReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type UpdateUserInfoToCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *UpdateUserInfoToCacheResp) Reset() {
	*x = UpdateUserInfoToCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoToCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoToCacheResp) ProtoMessage() {}

func (x *UpdateUserInfoToCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoToCacheResp.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoToCacheResp) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateUserInfoToCacheResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type GetFriendIDListFromCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetFriendIDListFromCacheReq) Reset() {
	*x = GetFriendIDListFromCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendIDListFromCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendIDListFromCacheReq) ProtoMessage() {}

func (x *GetFriendIDListFromCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendIDListFromCacheReq.ProtoReflect.Descriptor instead.
func (*GetFriendIDListFromCacheReq) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{6}
}

func (x *GetFriendIDListFromCacheReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFriendIDListFromCacheReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetFriendIDListFromCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIdList []string           `protobuf:"bytes,1,rep,name=user_id_list,json=userIdList,proto3" json:"user_id_list,omitempty"`
	Common     *pb_com.CommonResp `protobuf:"bytes,2,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *GetFriendIDListFromCacheResp) Reset() {
	*x = GetFriendIDListFromCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendIDListFromCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendIDListFromCacheResp) ProtoMessage() {}

func (x *GetFriendIDListFromCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendIDListFromCacheResp.ProtoReflect.Descriptor instead.
func (*GetFriendIDListFromCacheResp) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{7}
}

func (x *GetFriendIDListFromCacheResp) GetUserIdList() []string {
	if x != nil {
		return x.UserIdList
	}
	return nil
}

func (x *GetFriendIDListFromCacheResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type AddFriendToCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId    string `protobuf:"bytes,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	OperationId string `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *AddFriendToCacheReq) Reset() {
	*x = AddFriendToCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendToCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendToCacheReq) ProtoMessage() {}

func (x *AddFriendToCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendToCacheReq.ProtoReflect.Descriptor instead.
func (*AddFriendToCacheReq) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{8}
}

func (x *AddFriendToCacheReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddFriendToCacheReq) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *AddFriendToCacheReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type AddFriendToCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *AddFriendToCacheResp) Reset() {
	*x = AddFriendToCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendToCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendToCacheResp) ProtoMessage() {}

func (x *AddFriendToCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendToCacheResp.ProtoReflect.Descriptor instead.
func (*AddFriendToCacheResp) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{9}
}

func (x *AddFriendToCacheResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type ReduceFriendFromCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId    string `protobuf:"bytes,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	OperationId string `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *ReduceFriendFromCacheReq) Reset() {
	*x = ReduceFriendFromCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceFriendFromCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceFriendFromCacheReq) ProtoMessage() {}

func (x *ReduceFriendFromCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceFriendFromCacheReq.ProtoReflect.Descriptor instead.
func (*ReduceFriendFromCacheReq) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{10}
}

func (x *ReduceFriendFromCacheReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReduceFriendFromCacheReq) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *ReduceFriendFromCacheReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type ReduceFriendFromCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *ReduceFriendFromCacheResp) Reset() {
	*x = ReduceFriendFromCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceFriendFromCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceFriendFromCacheResp) ProtoMessage() {}

func (x *ReduceFriendFromCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceFriendFromCacheResp.ProtoReflect.Descriptor instead.
func (*ReduceFriendFromCacheResp) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{11}
}

func (x *ReduceFriendFromCacheResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type GetBlackIDListFromCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetBlackIDListFromCacheReq) Reset() {
	*x = GetBlackIDListFromCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlackIDListFromCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlackIDListFromCacheReq) ProtoMessage() {}

func (x *GetBlackIDListFromCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlackIDListFromCacheReq.ProtoReflect.Descriptor instead.
func (*GetBlackIDListFromCacheReq) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{12}
}

func (x *GetBlackIDListFromCacheReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBlackIDListFromCacheReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetBlackIDListFromCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIdList []string           `protobuf:"bytes,1,rep,name=user_id_list,json=userIdList,proto3" json:"user_id_list,omitempty"`
	Common     *pb_com.CommonResp `protobuf:"bytes,2,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *GetBlackIDListFromCacheResp) Reset() {
	*x = GetBlackIDListFromCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlackIDListFromCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlackIDListFromCacheResp) ProtoMessage() {}

func (x *GetBlackIDListFromCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlackIDListFromCacheResp.ProtoReflect.Descriptor instead.
func (*GetBlackIDListFromCacheResp) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{13}
}

func (x *GetBlackIDListFromCacheResp) GetUserIdList() []string {
	if x != nil {
		return x.UserIdList
	}
	return nil
}

func (x *GetBlackIDListFromCacheResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type AddBlackUserToCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BlackUserId string `protobuf:"bytes,2,opt,name=black_user_id,json=blackUserId,proto3" json:"black_user_id,omitempty"`
	OperationId string `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *AddBlackUserToCacheReq) Reset() {
	*x = AddBlackUserToCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlackUserToCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlackUserToCacheReq) ProtoMessage() {}

func (x *AddBlackUserToCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlackUserToCacheReq.ProtoReflect.Descriptor instead.
func (*AddBlackUserToCacheReq) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{14}
}

func (x *AddBlackUserToCacheReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddBlackUserToCacheReq) GetBlackUserId() string {
	if x != nil {
		return x.BlackUserId
	}
	return ""
}

func (x *AddBlackUserToCacheReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type AddBlackUserToCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *AddBlackUserToCacheResp) Reset() {
	*x = AddBlackUserToCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlackUserToCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlackUserToCacheResp) ProtoMessage() {}

func (x *AddBlackUserToCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlackUserToCacheResp.ProtoReflect.Descriptor instead.
func (*AddBlackUserToCacheResp) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{15}
}

func (x *AddBlackUserToCacheResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type ReduceBlackUserFromCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BlackUserId string `protobuf:"bytes,2,opt,name=black_user_id,json=blackUserId,proto3" json:"black_user_id,omitempty"`
	OperationId string `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *ReduceBlackUserFromCacheReq) Reset() {
	*x = ReduceBlackUserFromCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceBlackUserFromCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceBlackUserFromCacheReq) ProtoMessage() {}

func (x *ReduceBlackUserFromCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceBlackUserFromCacheReq.ProtoReflect.Descriptor instead.
func (*ReduceBlackUserFromCacheReq) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{16}
}

func (x *ReduceBlackUserFromCacheReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReduceBlackUserFromCacheReq) GetBlackUserId() string {
	if x != nil {
		return x.BlackUserId
	}
	return ""
}

func (x *ReduceBlackUserFromCacheReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type ReduceBlackUserFromCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *ReduceBlackUserFromCacheResp) Reset() {
	*x = ReduceBlackUserFromCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceBlackUserFromCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceBlackUserFromCacheResp) ProtoMessage() {}

func (x *ReduceBlackUserFromCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceBlackUserFromCacheResp.ProtoReflect.Descriptor instead.
func (*ReduceBlackUserFromCacheResp) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{17}
}

func (x *ReduceBlackUserFromCacheResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type GetGroupMemberIDListFromCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	GroupId     string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetGroupMemberIDListFromCacheReq) Reset() {
	*x = GetGroupMemberIDListFromCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberIDListFromCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberIDListFromCacheReq) ProtoMessage() {}

func (x *GetGroupMemberIDListFromCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberIDListFromCacheReq.ProtoReflect.Descriptor instead.
func (*GetGroupMemberIDListFromCacheReq) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{18}
}

func (x *GetGroupMemberIDListFromCacheReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *GetGroupMemberIDListFromCacheReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupMemberIDListFromCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common     *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	UserIdList []string           `protobuf:"bytes,2,rep,name=user_id_list,json=userIdList,proto3" json:"user_id_list,omitempty"`
}

func (x *GetGroupMemberIDListFromCacheResp) Reset() {
	*x = GetGroupMemberIDListFromCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberIDListFromCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberIDListFromCacheResp) ProtoMessage() {}

func (x *GetGroupMemberIDListFromCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberIDListFromCacheResp.ProtoReflect.Descriptor instead.
func (*GetGroupMemberIDListFromCacheResp) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{19}
}

func (x *GetGroupMemberIDListFromCacheResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetGroupMemberIDListFromCacheResp) GetUserIdList() []string {
	if x != nil {
		return x.UserIdList
	}
	return nil
}

type AddGroupMemberToCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIdList  []string `protobuf:"bytes,1,rep,name=user_id_list,json=userIdList,proto3" json:"user_id_list,omitempty"`
	GroupId     string   `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	OperationId string   `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *AddGroupMemberToCacheReq) Reset() {
	*x = AddGroupMemberToCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupMemberToCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupMemberToCacheReq) ProtoMessage() {}

func (x *AddGroupMemberToCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupMemberToCacheReq.ProtoReflect.Descriptor instead.
func (*AddGroupMemberToCacheReq) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{20}
}

func (x *AddGroupMemberToCacheReq) GetUserIdList() []string {
	if x != nil {
		return x.UserIdList
	}
	return nil
}

func (x *AddGroupMemberToCacheReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AddGroupMemberToCacheReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type AddGroupMemberToCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *AddGroupMemberToCacheResp) Reset() {
	*x = AddGroupMemberToCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupMemberToCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupMemberToCacheResp) ProtoMessage() {}

func (x *AddGroupMemberToCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupMemberToCacheResp.ProtoReflect.Descriptor instead.
func (*AddGroupMemberToCacheResp) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{21}
}

func (x *AddGroupMemberToCacheResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type ReduceGroupMemberFromCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIdList  []string `protobuf:"bytes,1,rep,name=user_id_list,json=userIdList,proto3" json:"user_id_list,omitempty"`
	GroupId     string   `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	OperationId string   `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *ReduceGroupMemberFromCacheReq) Reset() {
	*x = ReduceGroupMemberFromCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceGroupMemberFromCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceGroupMemberFromCacheReq) ProtoMessage() {}

func (x *ReduceGroupMemberFromCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceGroupMemberFromCacheReq.ProtoReflect.Descriptor instead.
func (*ReduceGroupMemberFromCacheReq) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{22}
}

func (x *ReduceGroupMemberFromCacheReq) GetUserIdList() []string {
	if x != nil {
		return x.UserIdList
	}
	return nil
}

func (x *ReduceGroupMemberFromCacheReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ReduceGroupMemberFromCacheReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type ReduceGroupMemberFromCacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *ReduceGroupMemberFromCacheResp) Reset() {
	*x = ReduceGroupMemberFromCacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cache_cache_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceGroupMemberFromCacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceGroupMemberFromCacheResp) ProtoMessage() {}

func (x *ReduceGroupMemberFromCacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_cache_cache_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceGroupMemberFromCacheResp.ProtoReflect.Descriptor instead.
func (*ReduceGroupMemberFromCacheResp) Descriptor() ([]byte, []int) {
	return file_cache_cache_proto_rawDescGZIP(), []int{23}
}

func (x *ReduceGroupMemberFromCacheResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

var File_cache_cache_proto protoreflect.FileDescriptor

var file_cache_cache_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x1a, 0x0e, 0x70, 0x62, 0x5f, 0x77,
	0x73, 0x2f, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x62, 0x5f, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x12, 0x70, 0x62, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41,
	0x43, 0x48, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x40, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22,
	0x54, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72,
	0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x37, 0x0a,
	0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x76, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x37, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x47,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62,
	0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x59, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x6c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49,
	0x44, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x22, 0x6e, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x42, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f,
	0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x18, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x19, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x16, 0x41, 0x64, 0x64,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a,
	0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x1b, 0x52, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f,
	0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x1c, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63,
	0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f,
	0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a, 0x18, 0x41, 0x64,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22,
	0x7f, 0x0a, 0x1d, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x4c, 0x0a, 0x1e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2a, 0x45,
	0x0a, 0x11, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x43, 0x48, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41,
	0x43, 0x48, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x41,
	0x4c, 0x55, 0x45, 0x10, 0x02, 0x32, 0xa5, 0x09, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x12,
	0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x2e, 0x70, 0x62, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72,
	0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72,
	0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x6f, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x6f, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x6f, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x10,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x1a, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x6f,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x15, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x21, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1d,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a,
	0x18, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x72, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12,
	0x1f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x69, 0x0a, 0x1a, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x24, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x52,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x12, 0x5a,
	0x10, 0x2e, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x3b, 0x70, 0x62, 0x5f, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cache_cache_proto_rawDescOnce sync.Once
	file_cache_cache_proto_rawDescData = file_cache_cache_proto_rawDesc
)

func file_cache_cache_proto_rawDescGZIP() []byte {
	file_cache_cache_proto_rawDescOnce.Do(func() {
		file_cache_cache_proto_rawDescData = protoimpl.X.CompressGZIP(file_cache_cache_proto_rawDescData)
	})
	return file_cache_cache_proto_rawDescData
}

var file_cache_cache_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cache_cache_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_cache_cache_proto_goTypes = []interface{}{
	(UPDATE_CACHE_TYPE)(0),                    // 0: cache.UPDATE_CACHE_TYPE
	(*UpdateUserInfoReq)(nil),                 // 1: cache.UpdateUserInfoReq
	(*UpdateUserInfoResp)(nil),                // 2: cache.UpdateUserInfoResp
	(*GetUserInfoFromCacheReq)(nil),           // 3: cache.GetUserInfoFromCacheReq
	(*GetUserInfoFromCacheResp)(nil),          // 4: cache.GetUserInfoFromCacheResp
	(*UpdateUserInfoToCacheReq)(nil),          // 5: cache.UpdateUserInfoToCacheReq
	(*UpdateUserInfoToCacheResp)(nil),         // 6: cache.UpdateUserInfoToCacheResp
	(*GetFriendIDListFromCacheReq)(nil),       // 7: cache.GetFriendIDListFromCacheReq
	(*GetFriendIDListFromCacheResp)(nil),      // 8: cache.GetFriendIDListFromCacheResp
	(*AddFriendToCacheReq)(nil),               // 9: cache.AddFriendToCacheReq
	(*AddFriendToCacheResp)(nil),              // 10: cache.AddFriendToCacheResp
	(*ReduceFriendFromCacheReq)(nil),          // 11: cache.ReduceFriendFromCacheReq
	(*ReduceFriendFromCacheResp)(nil),         // 12: cache.ReduceFriendFromCacheResp
	(*GetBlackIDListFromCacheReq)(nil),        // 13: cache.GetBlackIDListFromCacheReq
	(*GetBlackIDListFromCacheResp)(nil),       // 14: cache.GetBlackIDListFromCacheResp
	(*AddBlackUserToCacheReq)(nil),            // 15: cache.AddBlackUserToCacheReq
	(*AddBlackUserToCacheResp)(nil),           // 16: cache.AddBlackUserToCacheResp
	(*ReduceBlackUserFromCacheReq)(nil),       // 17: cache.ReduceBlackUserFromCacheReq
	(*ReduceBlackUserFromCacheResp)(nil),      // 18: cache.ReduceBlackUserFromCacheResp
	(*GetGroupMemberIDListFromCacheReq)(nil),  // 19: cache.GetGroupMemberIDListFromCacheReq
	(*GetGroupMemberIDListFromCacheResp)(nil), // 20: cache.GetGroupMemberIDListFromCacheResp
	(*AddGroupMemberToCacheReq)(nil),          // 21: cache.AddGroupMemberToCacheReq
	(*AddGroupMemberToCacheResp)(nil),         // 22: cache.AddGroupMemberToCacheResp
	(*ReduceGroupMemberFromCacheReq)(nil),     // 23: cache.ReduceGroupMemberFromCacheReq
	(*ReduceGroupMemberFromCacheResp)(nil),    // 24: cache.ReduceGroupMemberFromCacheResp
	(*pb_user.UserInfo)(nil),                  // 25: pb_user.UserInfo
	(*pb_com.CommonResp)(nil),                 // 26: pb_com.CommonResp
	(*pb_user.UserInfoReq)(nil),               // 27: pb_user.UserInfoReq
	(*pb_user.UserInfoResp)(nil),              // 28: pb_user.UserInfoResp
}
var file_cache_cache_proto_depIdxs = []int32{
	0,  // 0: cache.UpdateUserInfoReq.update_type:type_name -> cache.UPDATE_CACHE_TYPE
	25, // 1: cache.UpdateUserInfoReq.user_info:type_name -> pb_user.UserInfo
	26, // 2: cache.UpdateUserInfoResp.common:type_name -> pb_com.CommonResp
	26, // 3: cache.GetUserInfoFromCacheResp.common:type_name -> pb_com.CommonResp
	25, // 4: cache.GetUserInfoFromCacheResp.user_info_list:type_name -> pb_user.UserInfo
	25, // 5: cache.UpdateUserInfoToCacheReq.user_info_list:type_name -> pb_user.UserInfo
	26, // 6: cache.UpdateUserInfoToCacheResp.common:type_name -> pb_com.CommonResp
	26, // 7: cache.GetFriendIDListFromCacheResp.common:type_name -> pb_com.CommonResp
	26, // 8: cache.AddFriendToCacheResp.common:type_name -> pb_com.CommonResp
	26, // 9: cache.ReduceFriendFromCacheResp.common:type_name -> pb_com.CommonResp
	26, // 10: cache.GetBlackIDListFromCacheResp.common:type_name -> pb_com.CommonResp
	26, // 11: cache.AddBlackUserToCacheResp.common:type_name -> pb_com.CommonResp
	26, // 12: cache.ReduceBlackUserFromCacheResp.common:type_name -> pb_com.CommonResp
	26, // 13: cache.GetGroupMemberIDListFromCacheResp.common:type_name -> pb_com.CommonResp
	26, // 14: cache.AddGroupMemberToCacheResp.common:type_name -> pb_com.CommonResp
	26, // 15: cache.ReduceGroupMemberFromCacheResp.common:type_name -> pb_com.CommonResp
	27, // 16: cache.cache.GetUserInfo:input_type -> pb_user.UserInfoReq
	1,  // 17: cache.cache.UpdateUserInfo:input_type -> cache.UpdateUserInfoReq
	3,  // 18: cache.cache.GetUserInfoFromCache:input_type -> cache.GetUserInfoFromCacheReq
	5,  // 19: cache.cache.UpdateUserInfoToCache:input_type -> cache.UpdateUserInfoToCacheReq
	7,  // 20: cache.cache.GetFriendIDListFromCache:input_type -> cache.GetFriendIDListFromCacheReq
	9,  // 21: cache.cache.AddFriendToCache:input_type -> cache.AddFriendToCacheReq
	11, // 22: cache.cache.ReduceFriendFromCache:input_type -> cache.ReduceFriendFromCacheReq
	13, // 23: cache.cache.GetBlackIDListFromCache:input_type -> cache.GetBlackIDListFromCacheReq
	15, // 24: cache.cache.AddBlackUserToCache:input_type -> cache.AddBlackUserToCacheReq
	17, // 25: cache.cache.ReduceBlackUserFromCache:input_type -> cache.ReduceBlackUserFromCacheReq
	19, // 26: cache.cache.GetGroupMemberIDListFromCache:input_type -> cache.GetGroupMemberIDListFromCacheReq
	21, // 27: cache.cache.AddGroupMemberToCache:input_type -> cache.AddGroupMemberToCacheReq
	23, // 28: cache.cache.ReduceGroupMemberFromCache:input_type -> cache.ReduceGroupMemberFromCacheReq
	28, // 29: cache.cache.GetUserInfo:output_type -> pb_user.UserInfoResp
	2,  // 30: cache.cache.UpdateUserInfo:output_type -> cache.UpdateUserInfoResp
	4,  // 31: cache.cache.GetUserInfoFromCache:output_type -> cache.GetUserInfoFromCacheResp
	6,  // 32: cache.cache.UpdateUserInfoToCache:output_type -> cache.UpdateUserInfoToCacheResp
	8,  // 33: cache.cache.GetFriendIDListFromCache:output_type -> cache.GetFriendIDListFromCacheResp
	10, // 34: cache.cache.AddFriendToCache:output_type -> cache.AddFriendToCacheResp
	12, // 35: cache.cache.ReduceFriendFromCache:output_type -> cache.ReduceFriendFromCacheResp
	14, // 36: cache.cache.GetBlackIDListFromCache:output_type -> cache.GetBlackIDListFromCacheResp
	16, // 37: cache.cache.AddBlackUserToCache:output_type -> cache.AddBlackUserToCacheResp
	18, // 38: cache.cache.ReduceBlackUserFromCache:output_type -> cache.ReduceBlackUserFromCacheResp
	20, // 39: cache.cache.GetGroupMemberIDListFromCache:output_type -> cache.GetGroupMemberIDListFromCacheResp
	22, // 40: cache.cache.AddGroupMemberToCache:output_type -> cache.AddGroupMemberToCacheResp
	24, // 41: cache.cache.ReduceGroupMemberFromCache:output_type -> cache.ReduceGroupMemberFromCacheResp
	29, // [29:42] is the sub-list for method output_type
	16, // [16:29] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_cache_cache_proto_init() }
func file_cache_cache_proto_init() {
	if File_cache_cache_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cache_cache_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoFromCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoFromCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoToCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoToCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendIDListFromCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendIDListFromCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendToCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendToCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReduceFriendFromCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReduceFriendFromCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlackIDListFromCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlackIDListFromCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlackUserToCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlackUserToCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReduceBlackUserFromCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReduceBlackUserFromCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberIDListFromCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberIDListFromCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupMemberToCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupMemberToCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReduceGroupMemberFromCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cache_cache_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReduceGroupMemberFromCacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cache_cache_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cache_cache_proto_goTypes,
		DependencyIndexes: file_cache_cache_proto_depIdxs,
		EnumInfos:         file_cache_cache_proto_enumTypes,
		MessageInfos:      file_cache_cache_proto_msgTypes,
	}.Build()
	File_cache_cache_proto = out.File
	file_cache_cache_proto_rawDesc = nil
	file_cache_cache_proto_goTypes = nil
	file_cache_cache_proto_depIdxs = nil
}
