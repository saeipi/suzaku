// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: group/group.proto

package pb_group

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	pb_com "suzaku/pkg/proto/pb_com"
	pb_ws "suzaku/pkg/proto/pb_ws"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HANDLE_JOIN_GROUP_RESULT int32

const (
	HANDLE_JOIN_GROUP_RESULT_NONE       HANDLE_JOIN_GROUP_RESULT = 0
	HANDLE_JOIN_GROUP_RESULT_APPROVE    HANDLE_JOIN_GROUP_RESULT = 1 // 同意
	HANDLE_JOIN_GROUP_RESULT_RESOLUTELY HANDLE_JOIN_GROUP_RESULT = 2 // 拒绝
)

// Enum value maps for HANDLE_JOIN_GROUP_RESULT.
var (
	HANDLE_JOIN_GROUP_RESULT_name = map[int32]string{
		0: "NONE",
		1: "APPROVE",
		2: "RESOLUTELY",
	}
	HANDLE_JOIN_GROUP_RESULT_value = map[string]int32{
		"NONE":       0,
		"APPROVE":    1,
		"RESOLUTELY": 2,
	}
)

func (x HANDLE_JOIN_GROUP_RESULT) Enum() *HANDLE_JOIN_GROUP_RESULT {
	p := new(HANDLE_JOIN_GROUP_RESULT)
	*p = x
	return p
}

func (x HANDLE_JOIN_GROUP_RESULT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HANDLE_JOIN_GROUP_RESULT) Descriptor() protoreflect.EnumDescriptor {
	return file_group_group_proto_enumTypes[0].Descriptor()
}

func (HANDLE_JOIN_GROUP_RESULT) Type() protoreflect.EnumType {
	return &file_group_group_proto_enumTypes[0]
}

func (x HANDLE_JOIN_GROUP_RESULT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HANDLE_JOIN_GROUP_RESULT.Descriptor instead.
func (HANDLE_JOIN_GROUP_RESULT) EnumDescriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{0}
}

// 1、加入群申请
type RequestJoinGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ReqMsg      string `protobuf:"bytes,2,opt,name=req_msg,json=reqMsg,proto3" json:"req_msg,omitempty"`
	UserId      string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperationId string `protobuf:"bytes,4,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	ReqSource   int32  `protobuf:"varint,5,opt,name=req_source,json=reqSource,proto3" json:"req_source,omitempty"`
}

func (x *RequestJoinGroupReq) Reset() {
	*x = RequestJoinGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestJoinGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestJoinGroupReq) ProtoMessage() {}

func (x *RequestJoinGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestJoinGroupReq.ProtoReflect.Descriptor instead.
func (*RequestJoinGroupReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{0}
}

func (x *RequestJoinGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *RequestJoinGroupReq) GetReqMsg() string {
	if x != nil {
		return x.ReqMsg
	}
	return ""
}

func (x *RequestJoinGroupReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RequestJoinGroupReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *RequestJoinGroupReq) GetReqSource() int32 {
	if x != nil {
		return x.ReqSource
	}
	return 0
}

type RequestJoinGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *RequestJoinGroupResp) Reset() {
	*x = RequestJoinGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestJoinGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestJoinGroupResp) ProtoMessage() {}

func (x *RequestJoinGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestJoinGroupResp.ProtoReflect.Descriptor instead.
func (*RequestJoinGroupResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{1}
}

func (x *RequestJoinGroupResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

// 2、处理入群请求
type HandleRequestJoinGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId      string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	HandleMsg    string `protobuf:"bytes,3,opt,name=handle_msg,json=handleMsg,proto3" json:"handle_msg,omitempty"`
	OperationId  string `protobuf:"bytes,4,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	HandleResult int32  `protobuf:"varint,5,opt,name=handle_result,json=handleResult,proto3" json:"handle_result,omitempty"`
}

func (x *HandleRequestJoinGroupReq) Reset() {
	*x = HandleRequestJoinGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRequestJoinGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRequestJoinGroupReq) ProtoMessage() {}

func (x *HandleRequestJoinGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRequestJoinGroupReq.ProtoReflect.Descriptor instead.
func (*HandleRequestJoinGroupReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{2}
}

func (x *HandleRequestJoinGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *HandleRequestJoinGroupReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HandleRequestJoinGroupReq) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

func (x *HandleRequestJoinGroupReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *HandleRequestJoinGroupReq) GetHandleResult() int32 {
	if x != nil {
		return x.HandleResult
	}
	return 0
}

type HandleRequestJoinGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *HandleRequestJoinGroupResp) Reset() {
	*x = HandleRequestJoinGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRequestJoinGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRequestJoinGroupResp) ProtoMessage() {}

func (x *HandleRequestJoinGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRequestJoinGroupResp.ProtoReflect.Descriptor instead.
func (*HandleRequestJoinGroupResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{3}
}

func (x *HandleRequestJoinGroupResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

// 3、获取群全部成员
type GetGroupAllMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` //No verification permission
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetGroupAllMemberReq) Reset() {
	*x = GetGroupAllMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupAllMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAllMemberReq) ProtoMessage() {}

func (x *GetGroupAllMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAllMemberReq.ProtoReflect.Descriptor instead.
func (*GetGroupAllMemberReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{4}
}

func (x *GetGroupAllMemberReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupAllMemberReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetGroupAllMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common     *pb_com.CommonResp       `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	MemberList []*pb_ws.GroupMemberInfo `protobuf:"bytes,2,rep,name=member_list,json=memberList,proto3" json:"member_list,omitempty"`
}

func (x *GetGroupAllMemberResp) Reset() {
	*x = GetGroupAllMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupAllMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAllMemberResp) ProtoMessage() {}

func (x *GetGroupAllMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAllMemberResp.ProtoReflect.Descriptor instead.
func (*GetGroupAllMemberResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{5}
}

func (x *GetGroupAllMemberResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetGroupAllMemberResp) GetMemberList() []*pb_ws.GroupMemberInfo {
	if x != nil {
		return x.MemberList
	}
	return nil
}

// 4、获取群全部成员基础信息
type GetGroupAllMemberBasicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` //No verification permission
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetGroupAllMemberBasicReq) Reset() {
	*x = GetGroupAllMemberBasicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupAllMemberBasicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAllMemberBasicReq) ProtoMessage() {}

func (x *GetGroupAllMemberBasicReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAllMemberBasicReq.ProtoReflect.Descriptor instead.
func (*GetGroupAllMemberBasicReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{6}
}

func (x *GetGroupAllMemberBasicReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupAllMemberBasicReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetGroupAllMemberBasicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common     *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	MemberList []*GroupMemberInfo `protobuf:"bytes,2,rep,name=member_list,json=memberList,proto3" json:"member_list,omitempty"`
}

func (x *GetGroupAllMemberBasicResp) Reset() {
	*x = GetGroupAllMemberBasicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupAllMemberBasicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAllMemberBasicResp) ProtoMessage() {}

func (x *GetGroupAllMemberBasicResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAllMemberBasicResp.ProtoReflect.Descriptor instead.
func (*GetGroupAllMemberBasicResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{7}
}

func (x *GetGroupAllMemberBasicResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetGroupAllMemberBasicResp) GetMemberList() []*GroupMemberInfo {
	if x != nil {
		return x.MemberList
	}
	return nil
}

// 5、获取群成员分页列表
type GetGroupMemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperationId string `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	Page        int32  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize    int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetGroupMemberListReq) Reset() {
	*x = GetGroupMemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListReq) ProtoMessage() {}

func (x *GetGroupMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListReq.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{8}
}

func (x *GetGroupMemberListReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMemberListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetGroupMemberListReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *GetGroupMemberListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetGroupMemberListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetGroupMemberListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common     *pb_com.CommonResp       `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	TotalRows  int64                    `protobuf:"varint,2,opt,name=total_rows,json=totalRows,proto3" json:"total_rows,omitempty"`
	MemberList []*pb_ws.GroupMemberInfo `protobuf:"bytes,3,rep,name=member_list,json=memberList,proto3" json:"member_list,omitempty"`
}

func (x *GetGroupMemberListResp) Reset() {
	*x = GetGroupMemberListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListResp) ProtoMessage() {}

func (x *GetGroupMemberListResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListResp.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{9}
}

func (x *GetGroupMemberListResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetGroupMemberListResp) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *GetGroupMemberListResp) GetMemberList() []*pb_ws.GroupMemberInfo {
	if x != nil {
		return x.MemberList
	}
	return nil
}

type GroupMemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleLevel int32  `protobuf:"varint,2,opt,name=role_level,json=roleLevel,proto3" json:"role_level,omitempty"`
}

func (x *GroupMemberInfo) Reset() {
	*x = GroupMemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMemberInfo) ProtoMessage() {}

func (x *GroupMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMemberInfo.ProtoReflect.Descriptor instead.
func (*GroupMemberInfo) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{10}
}

func (x *GroupMemberInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GroupMemberInfo) GetRoleLevel() int32 {
	if x != nil {
		return x.RoleLevel
	}
	return 0
}

type CreateGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberList  []*GroupMemberInfo `protobuf:"bytes,1,rep,name=member_list,json=memberList,proto3" json:"member_list,omitempty"`
	GroupInfo   *pb_ws.GroupInfo   `protobuf:"bytes,2,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
	OperationId string             `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *CreateGroupReq) Reset() {
	*x = CreateGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupReq) ProtoMessage() {}

func (x *CreateGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupReq.ProtoReflect.Descriptor instead.
func (*CreateGroupReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{11}
}

func (x *CreateGroupReq) GetMemberList() []*GroupMemberInfo {
	if x != nil {
		return x.MemberList
	}
	return nil
}

func (x *CreateGroupReq) GetGroupInfo() *pb_ws.GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

func (x *CreateGroupReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type CreateGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common    *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	GroupInfo *pb_ws.GroupInfo   `protobuf:"bytes,2,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
}

func (x *CreateGroupResp) Reset() {
	*x = CreateGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResp) ProtoMessage() {}

func (x *CreateGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResp.ProtoReflect.Descriptor instead.
func (*CreateGroupResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{12}
}

func (x *CreateGroupResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *CreateGroupResp) GetGroupInfo() *pb_ws.GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

// 获取群信息
type GetGroupsInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupIdList []string `protobuf:"bytes,1,rep,name=group_id_list,json=groupIdList,proto3" json:"group_id_list,omitempty"`
	OperationId string   `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetGroupsInfoReq) Reset() {
	*x = GetGroupsInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsInfoReq) ProtoMessage() {}

func (x *GetGroupsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsInfoReq.ProtoReflect.Descriptor instead.
func (*GetGroupsInfoReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{13}
}

func (x *GetGroupsInfoReq) GetGroupIdList() []string {
	if x != nil {
		return x.GroupIdList
	}
	return nil
}

func (x *GetGroupsInfoReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetGroupsInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common        *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	GroupInfoList []*pb_ws.GroupInfo `protobuf:"bytes,2,rep,name=group_info_list,json=groupInfoList,proto3" json:"group_info_list,omitempty"`
}

func (x *GetGroupsInfoResp) Reset() {
	*x = GetGroupsInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsInfoResp) ProtoMessage() {}

func (x *GetGroupsInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsInfoResp.ProtoReflect.Descriptor instead.
func (*GetGroupsInfoResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{14}
}

func (x *GetGroupsInfoResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetGroupsInfoResp) GetGroupInfoList() []*pb_ws.GroupInfo {
	if x != nil {
		return x.GroupInfoList
	}
	return nil
}

// 更新群信息
type SetGroupInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfo   *pb_ws.GroupInfo `protobuf:"bytes,1,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
	OperationId string           `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *SetGroupInfoReq) Reset() {
	*x = SetGroupInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupInfoReq) ProtoMessage() {}

func (x *SetGroupInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupInfoReq.ProtoReflect.Descriptor instead.
func (*SetGroupInfoReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{15}
}

func (x *SetGroupInfoReq) GetGroupInfo() *pb_ws.GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

func (x *SetGroupInfoReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type SetGroupInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *SetGroupInfoResp) Reset() {
	*x = SetGroupInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupInfoResp) ProtoMessage() {}

func (x *SetGroupInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupInfoResp.ProtoReflect.Descriptor instead.
func (*SetGroupInfoResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{16}
}

func (x *SetGroupInfoResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type GetGroupApplicationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUserID    string `protobuf:"bytes,1,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"` //app manager or group owner(manager)
	OperationID string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	FromUserID  string `protobuf:"bytes,3,opt,name=FromUserID,proto3" json:"FromUserID,omitempty"` //owner or manager
}

func (x *GetGroupApplicationListReq) Reset() {
	*x = GetGroupApplicationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupApplicationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupApplicationListReq) ProtoMessage() {}

func (x *GetGroupApplicationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupApplicationListReq.ProtoReflect.Descriptor instead.
func (*GetGroupApplicationListReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{17}
}

func (x *GetGroupApplicationListReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetGroupApplicationListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetGroupApplicationListReq) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

type GetGroupApplicationListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode          int32                 `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	ErrMsg           string                `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	GroupRequestList []*pb_ws.GroupRequest `protobuf:"bytes,3,rep,name=GroupRequestList,proto3" json:"GroupRequestList,omitempty"`
}

func (x *GetGroupApplicationListResp) Reset() {
	*x = GetGroupApplicationListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupApplicationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupApplicationListResp) ProtoMessage() {}

func (x *GetGroupApplicationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupApplicationListResp.ProtoReflect.Descriptor instead.
func (*GetGroupApplicationListResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{18}
}

func (x *GetGroupApplicationListResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetGroupApplicationListResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetGroupApplicationListResp) GetGroupRequestList() []*pb_ws.GroupRequest {
	if x != nil {
		return x.GroupRequestList
	}
	return nil
}

type GetUserReqApplicationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	OpUserID    string `protobuf:"bytes,2,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
}

func (x *GetUserReqApplicationListReq) Reset() {
	*x = GetUserReqApplicationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReqApplicationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReqApplicationListReq) ProtoMessage() {}

func (x *GetUserReqApplicationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReqApplicationListReq.ProtoReflect.Descriptor instead.
func (*GetUserReqApplicationListReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserReqApplicationListReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetUserReqApplicationListReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GetUserReqApplicationListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetUserReqApplicationListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common           *pb_com.CommonResp    `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	GroupRequestList []*pb_ws.GroupRequest `protobuf:"bytes,2,rep,name=GroupRequestList,proto3" json:"GroupRequestList,omitempty"`
}

func (x *GetUserReqApplicationListResp) Reset() {
	*x = GetUserReqApplicationListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReqApplicationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReqApplicationListResp) ProtoMessage() {}

func (x *GetUserReqApplicationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReqApplicationListResp.ProtoReflect.Descriptor instead.
func (*GetUserReqApplicationListResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{20}
}

func (x *GetUserReqApplicationListResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetUserReqApplicationListResp) GetGroupRequestList() []*pb_ws.GroupRequest {
	if x != nil {
		return x.GroupRequestList
	}
	return nil
}

type TransferGroupOwnerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID        string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	OldOwnerUserID string `protobuf:"bytes,2,opt,name=OldOwnerUserID,proto3" json:"OldOwnerUserID,omitempty"`
	NewOwnerUserID string `protobuf:"bytes,3,opt,name=NewOwnerUserID,proto3" json:"NewOwnerUserID,omitempty"`
	OperationID    string `protobuf:"bytes,4,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserID       string `protobuf:"bytes,5,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"` //app manager or group owner
}

func (x *TransferGroupOwnerReq) Reset() {
	*x = TransferGroupOwnerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferGroupOwnerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferGroupOwnerReq) ProtoMessage() {}

func (x *TransferGroupOwnerReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferGroupOwnerReq.ProtoReflect.Descriptor instead.
func (*TransferGroupOwnerReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{21}
}

func (x *TransferGroupOwnerReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *TransferGroupOwnerReq) GetOldOwnerUserID() string {
	if x != nil {
		return x.OldOwnerUserID
	}
	return ""
}

func (x *TransferGroupOwnerReq) GetNewOwnerUserID() string {
	if x != nil {
		return x.NewOwnerUserID
	}
	return ""
}

func (x *TransferGroupOwnerReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *TransferGroupOwnerReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type TransferGroupOwnerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *TransferGroupOwnerResp) Reset() {
	*x = TransferGroupOwnerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferGroupOwnerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferGroupOwnerResp) ProtoMessage() {}

func (x *TransferGroupOwnerResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferGroupOwnerResp.ProtoReflect.Descriptor instead.
func (*TransferGroupOwnerResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{22}
}

func (x *TransferGroupOwnerResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type GroupApplicationResponseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserID     string `protobuf:"bytes,2,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
	GroupID      string `protobuf:"bytes,3,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	FromUserID   string `protobuf:"bytes,4,opt,name=FromUserID,proto3" json:"FromUserID,omitempty"` //
	HandledMsg   string `protobuf:"bytes,5,opt,name=HandledMsg,proto3" json:"HandledMsg,omitempty"`
	HandleResult int32  `protobuf:"varint,6,opt,name=HandleResult,proto3" json:"HandleResult,omitempty"`
}

func (x *GroupApplicationResponseReq) Reset() {
	*x = GroupApplicationResponseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupApplicationResponseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupApplicationResponseReq) ProtoMessage() {}

func (x *GroupApplicationResponseReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupApplicationResponseReq.ProtoReflect.Descriptor instead.
func (*GroupApplicationResponseReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{23}
}

func (x *GroupApplicationResponseReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GroupApplicationResponseReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *GroupApplicationResponseReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GroupApplicationResponseReq) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *GroupApplicationResponseReq) GetHandledMsg() string {
	if x != nil {
		return x.HandledMsg
	}
	return ""
}

func (x *GroupApplicationResponseReq) GetHandleResult() int32 {
	if x != nil {
		return x.HandleResult
	}
	return 0
}

type GroupApplicationResponseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *GroupApplicationResponseResp) Reset() {
	*x = GroupApplicationResponseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupApplicationResponseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupApplicationResponseResp) ProtoMessage() {}

func (x *GroupApplicationResponseResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupApplicationResponseResp.ProtoReflect.Descriptor instead.
func (*GroupApplicationResponseResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{24}
}

func (x *GroupApplicationResponseResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type QuitGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID     string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserID    string `protobuf:"bytes,3,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
}

func (x *QuitGroupReq) Reset() {
	*x = QuitGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitGroupReq) ProtoMessage() {}

func (x *QuitGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitGroupReq.ProtoReflect.Descriptor instead.
func (*QuitGroupReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{25}
}

func (x *QuitGroupReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *QuitGroupReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *QuitGroupReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type QuitGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *QuitGroupResp) Reset() {
	*x = QuitGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitGroupResp) ProtoMessage() {}

func (x *QuitGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitGroupResp.ProtoReflect.Descriptor instead.
func (*QuitGroupResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{26}
}

func (x *QuitGroupResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

// 获取群指定成员信息列表
type GetGroupMembersInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string   `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	MemberList  []string `protobuf:"bytes,2,rep,name=member_list,json=memberList,proto3" json:"member_list,omitempty"`
	UserId      string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //No verification permission
	OperationId string   `protobuf:"bytes,4,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetGroupMembersInfoReq) Reset() {
	*x = GetGroupMembersInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMembersInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMembersInfoReq) ProtoMessage() {}

func (x *GetGroupMembersInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMembersInfoReq.ProtoReflect.Descriptor instead.
func (*GetGroupMembersInfoReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{27}
}

func (x *GetGroupMembersInfoReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMembersInfoReq) GetMemberList() []string {
	if x != nil {
		return x.MemberList
	}
	return nil
}

func (x *GetGroupMembersInfoReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetGroupMembersInfoReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetGroupMembersInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common     *pb_com.CommonResp       `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	MemberList []*pb_ws.GroupMemberInfo `protobuf:"bytes,2,rep,name=member_list,json=memberList,proto3" json:"member_list,omitempty"`
}

func (x *GetGroupMembersInfoResp) Reset() {
	*x = GetGroupMembersInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMembersInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMembersInfoResp) ProtoMessage() {}

func (x *GetGroupMembersInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMembersInfoResp.ProtoReflect.Descriptor instead.
func (*GetGroupMembersInfoResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{28}
}

func (x *GetGroupMembersInfoResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetGroupMembersInfoResp) GetMemberList() []*pb_ws.GroupMemberInfo {
	if x != nil {
		return x.MemberList
	}
	return nil
}

// 提出群成员
type KickGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId          string   `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	KickedUserIdList []string `protobuf:"bytes,2,rep,name=kicked_user_id_list,json=kickedUserIdList,proto3" json:"kicked_user_id_list,omitempty"`
	Reason           string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	OperationId      string   `protobuf:"bytes,5,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	UserId           string   `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //app manger or group manager
}

func (x *KickGroupMemberReq) Reset() {
	*x = KickGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickGroupMemberReq) ProtoMessage() {}

func (x *KickGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickGroupMemberReq.ProtoReflect.Descriptor instead.
func (*KickGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{29}
}

func (x *KickGroupMemberReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *KickGroupMemberReq) GetKickedUserIdList() []string {
	if x != nil {
		return x.KickedUserIdList
	}
	return nil
}

func (x *KickGroupMemberReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *KickGroupMemberReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *KickGroupMemberReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Id2Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Result int32  `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"` //0 ok; -1 error
}

func (x *Id2Result) Reset() {
	*x = Id2Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id2Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id2Result) ProtoMessage() {}

func (x *Id2Result) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id2Result.ProtoReflect.Descriptor instead.
func (*Id2Result) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{30}
}

func (x *Id2Result) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Id2Result) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type KickGroupMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common        *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Id2ResultList []*Id2Result       `protobuf:"bytes,3,rep,name=id2_result_list,json=id2ResultList,proto3" json:"id2_result_list,omitempty"`
}

func (x *KickGroupMemberResp) Reset() {
	*x = KickGroupMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickGroupMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickGroupMemberResp) ProtoMessage() {}

func (x *KickGroupMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickGroupMemberResp.ProtoReflect.Descriptor instead.
func (*KickGroupMemberResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{31}
}

func (x *KickGroupMemberResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *KickGroupMemberResp) GetId2ResultList() []*Id2Result {
	if x != nil {
		return x.Id2ResultList
	}
	return nil
}

// 获取用户加入的群列表
type GetJoinedGroupListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetJoinedGroupListReq) Reset() {
	*x = GetJoinedGroupListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJoinedGroupListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoinedGroupListReq) ProtoMessage() {}

func (x *GetJoinedGroupListReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoinedGroupListReq.ProtoReflect.Descriptor instead.
func (*GetJoinedGroupListReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{32}
}

func (x *GetJoinedGroupListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetJoinedGroupListReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetJoinedGroupListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common    *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	GroupList []*pb_ws.GroupInfo `protobuf:"bytes,2,rep,name=group_list,json=groupList,proto3" json:"group_list,omitempty"`
}

func (x *GetJoinedGroupListResp) Reset() {
	*x = GetJoinedGroupListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJoinedGroupListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoinedGroupListResp) ProtoMessage() {}

func (x *GetJoinedGroupListResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoinedGroupListResp.ProtoReflect.Descriptor instead.
func (*GetJoinedGroupListResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{33}
}

func (x *GetJoinedGroupListResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetJoinedGroupListResp) GetGroupList() []*pb_ws.GroupInfo {
	if x != nil {
		return x.GroupList
	}
	return nil
}

// 邀请用户加入群
type InviteUserToGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId       string   `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	GroupId           string   `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Reason            string   `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	InvitedUserIdList []string `protobuf:"bytes,5,rep,name=invited_user_id_list,json=invitedUserIdList,proto3" json:"invited_user_id_list,omitempty"`
}

func (x *InviteUserToGroupReq) Reset() {
	*x = InviteUserToGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUserToGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserToGroupReq) ProtoMessage() {}

func (x *InviteUserToGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserToGroupReq.ProtoReflect.Descriptor instead.
func (*InviteUserToGroupReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{34}
}

func (x *InviteUserToGroupReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *InviteUserToGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *InviteUserToGroupReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *InviteUserToGroupReq) GetInvitedUserIdList() []string {
	if x != nil {
		return x.InvitedUserIdList
	}
	return nil
}

type InviteUserToGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common        *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Id2ResultList []*Id2Result       `protobuf:"bytes,2,rep,name=id2_result_list,json=id2ResultList,proto3" json:"id2_result_list,omitempty"` // 0 ok, -1 error
}

func (x *InviteUserToGroupResp) Reset() {
	*x = InviteUserToGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUserToGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserToGroupResp) ProtoMessage() {}

func (x *InviteUserToGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserToGroupResp.ProtoReflect.Descriptor instead.
func (*InviteUserToGroupResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{35}
}

func (x *InviteUserToGroupResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *InviteUserToGroupResp) GetId2ResultList() []*Id2Result {
	if x != nil {
		return x.Id2ResultList
	}
	return nil
}

type CMSGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfo       *pb_ws.GroupInfo `protobuf:"bytes,1,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
	GroupMasterName string           `protobuf:"bytes,2,opt,name=group_master_name,json=groupMasterName,proto3" json:"group_master_name,omitempty"`
	GroupMasterId   string           `protobuf:"bytes,3,opt,name=group_master_id,json=groupMasterId,proto3" json:"group_master_id,omitempty"`
}

func (x *CMSGroup) Reset() {
	*x = CMSGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMSGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMSGroup) ProtoMessage() {}

func (x *CMSGroup) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMSGroup.ProtoReflect.Descriptor instead.
func (*CMSGroup) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{36}
}

func (x *CMSGroup) GetGroupInfo() *pb_ws.GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

func (x *CMSGroup) GetGroupMasterName() string {
	if x != nil {
		return x.GroupMasterName
	}
	return ""
}

func (x *CMSGroup) GetGroupMasterId() string {
	if x != nil {
		return x.GroupMasterId
	}
	return ""
}

type GetGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName   string                   `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Pagination  *pb_ws.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	OperationId string                   `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetGroupReq) Reset() {
	*x = GetGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupReq) ProtoMessage() {}

func (x *GetGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupReq.ProtoReflect.Descriptor instead.
func (*GetGroupReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{37}
}

func (x *GetGroupReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GetGroupReq) GetPagination() *pb_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetGroupReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmsGroups  []*CMSGroup              `protobuf:"bytes,1,rep,name=cms_groups,json=cmsGroups,proto3" json:"cms_groups,omitempty"`
	Pagination *pb_ws.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	GroupNums  int32                    `protobuf:"varint,3,opt,name=group_nums,json=groupNums,proto3" json:"group_nums,omitempty"`
}

func (x *GetGroupResp) Reset() {
	*x = GetGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupResp) ProtoMessage() {}

func (x *GetGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupResp.ProtoReflect.Descriptor instead.
func (*GetGroupResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{38}
}

func (x *GetGroupResp) GetCmsGroups() []*CMSGroup {
	if x != nil {
		return x.CmsGroups
	}
	return nil
}

func (x *GetGroupResp) GetPagination() *pb_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetGroupResp) GetGroupNums() int32 {
	if x != nil {
		return x.GroupNums
	}
	return 0
}

type GetGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination  *pb_ws.RequestPagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	OperationId string                   `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetGroupsReq) Reset() {
	*x = GetGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsReq) ProtoMessage() {}

func (x *GetGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsReq.ProtoReflect.Descriptor instead.
func (*GetGroupsReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{39}
}

func (x *GetGroupsReq) GetPagination() *pb_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetGroupsReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetGroupsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmsGroups  []*CMSGroup              `protobuf:"bytes,1,rep,name=cms_groups,json=cmsGroups,proto3" json:"cms_groups,omitempty"`
	Pagination *pb_ws.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	GroupNum   int32                    `protobuf:"varint,3,opt,name=group_num,json=groupNum,proto3" json:"group_num,omitempty"`
}

func (x *GetGroupsResp) Reset() {
	*x = GetGroupsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsResp) ProtoMessage() {}

func (x *GetGroupsResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsResp.ProtoReflect.Descriptor instead.
func (*GetGroupsResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{40}
}

func (x *GetGroupsResp) GetCmsGroups() []*CMSGroup {
	if x != nil {
		return x.CmsGroups
	}
	return nil
}

func (x *GetGroupsResp) GetPagination() *pb_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetGroupsResp) GetGroupNum() int32 {
	if x != nil {
		return x.GroupNum
	}
	return 0
}

type GetGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetGroupMemberReq) Reset() {
	*x = GetGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberReq) ProtoMessage() {}

func (x *GetGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberReq.ProtoReflect.Descriptor instead.
func (*GetGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{41}
}

func (x *GetGroupMemberReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMemberReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type OperateGroupStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Status      int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	OperationId string `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *OperateGroupStatusReq) Reset() {
	*x = OperateGroupStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateGroupStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateGroupStatusReq) ProtoMessage() {}

func (x *OperateGroupStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateGroupStatusReq.ProtoReflect.Descriptor instead.
func (*OperateGroupStatusReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{42}
}

func (x *OperateGroupStatusReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *OperateGroupStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OperateGroupStatusReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type OperateGroupStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OperateGroupStatusResp) Reset() {
	*x = OperateGroupStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateGroupStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateGroupStatusResp) ProtoMessage() {}

func (x *OperateGroupStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateGroupStatusResp.ProtoReflect.Descriptor instead.
func (*OperateGroupStatusResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{43}
}

type OperateUserRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleLevel   int32  `protobuf:"varint,3,opt,name=role_level,json=roleLevel,proto3" json:"role_level,omitempty"`
	OperationId string `protobuf:"bytes,4,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *OperateUserRoleReq) Reset() {
	*x = OperateUserRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateUserRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateUserRoleReq) ProtoMessage() {}

func (x *OperateUserRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateUserRoleReq.ProtoReflect.Descriptor instead.
func (*OperateUserRoleReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{44}
}

func (x *OperateUserRoleReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *OperateUserRoleReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OperateUserRoleReq) GetRoleLevel() int32 {
	if x != nil {
		return x.RoleLevel
	}
	return 0
}

func (x *OperateUserRoleReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type OperateUserRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OperateUserRoleResp) Reset() {
	*x = OperateUserRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateUserRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateUserRoleResp) ProtoMessage() {}

func (x *OperateUserRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateUserRoleResp.ProtoReflect.Descriptor instead.
func (*OperateUserRoleResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{45}
}

type DeleteGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *DeleteGroupReq) Reset() {
	*x = DeleteGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupReq) ProtoMessage() {}

func (x *DeleteGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupReq.ProtoReflect.Descriptor instead.
func (*DeleteGroupReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DeleteGroupReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type DeleteGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteGroupResp) Reset() {
	*x = DeleteGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupResp) ProtoMessage() {}

func (x *DeleteGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupResp.ProtoReflect.Descriptor instead.
func (*DeleteGroupResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{47}
}

type GetGroupByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetGroupByIdReq) Reset() {
	*x = GetGroupByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupByIdReq) ProtoMessage() {}

func (x *GetGroupByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupByIdReq.ProtoReflect.Descriptor instead.
func (*GetGroupByIdReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{48}
}

func (x *GetGroupByIdReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupByIdReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetGroupByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmsGroup *CMSGroup `protobuf:"bytes,1,opt,name=cms_group,json=cmsGroup,proto3" json:"cms_group,omitempty"`
}

func (x *GetGroupByIdResp) Reset() {
	*x = GetGroupByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupByIdResp) ProtoMessage() {}

func (x *GetGroupByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupByIdResp.ProtoReflect.Descriptor instead.
func (*GetGroupByIdResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{49}
}

func (x *GetGroupByIdResp) GetCmsGroup() *CMSGroup {
	if x != nil {
		return x.CmsGroup
	}
	return nil
}

type GetGroupMembersCMSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string                   `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserName    string                   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Pagination  *pb_ws.RequestPagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	OperationId string                   `protobuf:"bytes,4,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *GetGroupMembersCMSReq) Reset() {
	*x = GetGroupMembersCMSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMembersCMSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMembersCMSReq) ProtoMessage() {}

func (x *GetGroupMembersCMSReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMembersCMSReq.ProtoReflect.Descriptor instead.
func (*GetGroupMembersCMSReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{50}
}

func (x *GetGroupMembersCMSReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMembersCMSReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetGroupMembersCMSReq) GetPagination() *pb_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetGroupMembersCMSReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetGroupMembersCMSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members    []*pb_ws.GroupMemberInfo  `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	Pagination *pb_ws.ResponsePagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	MemberNums int32                     `protobuf:"varint,3,opt,name=member_nums,json=memberNums,proto3" json:"member_nums,omitempty"`
}

func (x *GetGroupMembersCMSResp) Reset() {
	*x = GetGroupMembersCMSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMembersCMSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMembersCMSResp) ProtoMessage() {}

func (x *GetGroupMembersCMSResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMembersCMSResp.ProtoReflect.Descriptor instead.
func (*GetGroupMembersCMSResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{51}
}

func (x *GetGroupMembersCMSResp) GetMembers() []*pb_ws.GroupMemberInfo {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *GetGroupMembersCMSResp) GetPagination() *pb_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetGroupMembersCMSResp) GetMemberNums() int32 {
	if x != nil {
		return x.MemberNums
	}
	return 0
}

type RemoveGroupMembersCMSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string   `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserIds     []string `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	OperationId string   `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	UserId      string   `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveGroupMembersCMSReq) Reset() {
	*x = RemoveGroupMembersCMSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupMembersCMSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupMembersCMSReq) ProtoMessage() {}

func (x *RemoveGroupMembersCMSReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupMembersCMSReq.ProtoReflect.Descriptor instead.
func (*RemoveGroupMembersCMSReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{52}
}

func (x *RemoveGroupMembersCMSReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *RemoveGroupMembersCMSReq) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *RemoveGroupMembersCMSReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *RemoveGroupMembersCMSReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveGroupMembersCMSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success []string `protobuf:"bytes,1,rep,name=success,proto3" json:"success,omitempty"`
	Failed  []string `protobuf:"bytes,2,rep,name=failed,proto3" json:"failed,omitempty"`
}

func (x *RemoveGroupMembersCMSResp) Reset() {
	*x = RemoveGroupMembersCMSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupMembersCMSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupMembersCMSResp) ProtoMessage() {}

func (x *RemoveGroupMembersCMSResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupMembersCMSResp.ProtoReflect.Descriptor instead.
func (*RemoveGroupMembersCMSResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{53}
}

func (x *RemoveGroupMembersCMSResp) GetSuccess() []string {
	if x != nil {
		return x.Success
	}
	return nil
}

func (x *RemoveGroupMembersCMSResp) GetFailed() []string {
	if x != nil {
		return x.Failed
	}
	return nil
}

type AddGroupMembersCMSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string   `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserIds     []string `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	OperationId string   `protobuf:"bytes,3,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	UserId      string   `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddGroupMembersCMSReq) Reset() {
	*x = AddGroupMembersCMSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupMembersCMSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupMembersCMSReq) ProtoMessage() {}

func (x *AddGroupMembersCMSReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupMembersCMSReq.ProtoReflect.Descriptor instead.
func (*AddGroupMembersCMSReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{54}
}

func (x *AddGroupMembersCMSReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AddGroupMembersCMSReq) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *AddGroupMembersCMSReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *AddGroupMembersCMSReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AddGroupMembersCMSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success []string `protobuf:"bytes,1,rep,name=success,proto3" json:"success,omitempty"`
	Failed  []string `protobuf:"bytes,2,rep,name=failed,proto3" json:"failed,omitempty"`
}

func (x *AddGroupMembersCMSResp) Reset() {
	*x = AddGroupMembersCMSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupMembersCMSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupMembersCMSResp) ProtoMessage() {}

func (x *AddGroupMembersCMSResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupMembersCMSResp.ProtoReflect.Descriptor instead.
func (*AddGroupMembersCMSResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{55}
}

func (x *AddGroupMembersCMSResp) GetSuccess() []string {
	if x != nil {
		return x.Success
	}
	return nil
}

func (x *AddGroupMembersCMSResp) GetFailed() []string {
	if x != nil {
		return x.Failed
	}
	return nil
}

type DismissGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //group  or app manager
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	GroupId     string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *DismissGroupReq) Reset() {
	*x = DismissGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DismissGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DismissGroupReq) ProtoMessage() {}

func (x *DismissGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DismissGroupReq.ProtoReflect.Descriptor instead.
func (*DismissGroupReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{56}
}

func (x *DismissGroupReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DismissGroupReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *DismissGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type DismissGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *DismissGroupResp) Reset() {
	*x = DismissGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DismissGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DismissGroupResp) ProtoMessage() {}

func (x *DismissGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DismissGroupResp.ProtoReflect.Descriptor instead.
func (*DismissGroupResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{57}
}

func (x *DismissGroupResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type MuteGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //group  or app manager
	OperationId  string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	GroupId      string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	MutedSeconds uint32 `protobuf:"varint,4,opt,name=muted_seconds,json=mutedSeconds,proto3" json:"muted_seconds,omitempty"`
}

func (x *MuteGroupMemberReq) Reset() {
	*x = MuteGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteGroupMemberReq) ProtoMessage() {}

func (x *MuteGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteGroupMemberReq.ProtoReflect.Descriptor instead.
func (*MuteGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{58}
}

func (x *MuteGroupMemberReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MuteGroupMemberReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *MuteGroupMemberReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *MuteGroupMemberReq) GetMutedSeconds() uint32 {
	if x != nil {
		return x.MutedSeconds
	}
	return 0
}

type MuteGroupMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *MuteGroupMemberResp) Reset() {
	*x = MuteGroupMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteGroupMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteGroupMemberResp) ProtoMessage() {}

func (x *MuteGroupMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteGroupMemberResp.ProtoReflect.Descriptor instead.
func (*MuteGroupMemberResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{59}
}

func (x *MuteGroupMemberResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type CancelMuteGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //group  or app manager
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	GroupId     string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *CancelMuteGroupMemberReq) Reset() {
	*x = CancelMuteGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMuteGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMuteGroupMemberReq) ProtoMessage() {}

func (x *CancelMuteGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMuteGroupMemberReq.ProtoReflect.Descriptor instead.
func (*CancelMuteGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{60}
}

func (x *CancelMuteGroupMemberReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CancelMuteGroupMemberReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *CancelMuteGroupMemberReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type CancelMuteGroupMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *CancelMuteGroupMemberResp) Reset() {
	*x = CancelMuteGroupMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMuteGroupMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMuteGroupMemberResp) ProtoMessage() {}

func (x *CancelMuteGroupMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMuteGroupMemberResp.ProtoReflect.Descriptor instead.
func (*CancelMuteGroupMemberResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{61}
}

func (x *CancelMuteGroupMemberResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type MuteGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //group  or app manager
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	GroupId     string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *MuteGroupReq) Reset() {
	*x = MuteGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteGroupReq) ProtoMessage() {}

func (x *MuteGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteGroupReq.ProtoReflect.Descriptor instead.
func (*MuteGroupReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{62}
}

func (x *MuteGroupReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MuteGroupReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *MuteGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type MuteGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *MuteGroupResp) Reset() {
	*x = MuteGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteGroupResp) ProtoMessage() {}

func (x *MuteGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteGroupResp.ProtoReflect.Descriptor instead.
func (*MuteGroupResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{63}
}

func (x *MuteGroupResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type CancelMuteGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //group  or app manager
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	GroupId     string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *CancelMuteGroupReq) Reset() {
	*x = CancelMuteGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMuteGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMuteGroupReq) ProtoMessage() {}

func (x *CancelMuteGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMuteGroupReq.ProtoReflect.Descriptor instead.
func (*CancelMuteGroupReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{64}
}

func (x *CancelMuteGroupReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CancelMuteGroupReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *CancelMuteGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type CancelMuteGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *CancelMuteGroupResp) Reset() {
	*x = CancelMuteGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMuteGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMuteGroupResp) ProtoMessage() {}

func (x *CancelMuteGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMuteGroupResp.ProtoReflect.Descriptor instead.
func (*CancelMuteGroupResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{65}
}

func (x *CancelMuteGroupResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

type SetGroupMemberNicknameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Nickname    string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	UserId      string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperationId string `protobuf:"bytes,4,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *SetGroupMemberNicknameReq) Reset() {
	*x = SetGroupMemberNicknameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupMemberNicknameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupMemberNicknameReq) ProtoMessage() {}

func (x *SetGroupMemberNicknameReq) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupMemberNicknameReq.ProtoReflect.Descriptor instead.
func (*SetGroupMemberNicknameReq) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{66}
}

func (x *SetGroupMemberNicknameReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SetGroupMemberNicknameReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SetGroupMemberNicknameReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetGroupMemberNicknameReq) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type SetGroupMemberNicknameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *pb_com.CommonResp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *SetGroupMemberNicknameResp) Reset() {
	*x = SetGroupMemberNicknameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_group_group_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupMemberNicknameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupMemberNicknameResp) ProtoMessage() {}

func (x *SetGroupMemberNicknameResp) ProtoReflect() protoreflect.Message {
	mi := &file_group_group_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupMemberNicknameResp.ProtoReflect.Descriptor instead.
func (*SetGroupMemberNicknameResp) Descriptor() ([]byte, []int) {
	return file_group_group_proto_rawDescGZIP(), []int{67}
}

func (x *SetGroupMemberNicknameResp) GetCommon() *pb_com.CommonResp {
	if x != nil {
		return x.Common
	}
	return nil
}

var File_group_group_proto protoreflect.FileDescriptor

var file_group_group_proto_rawDesc = []byte{
	0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x0e, 0x70, 0x62, 0x5f, 0x77,
	0x73, 0x2f, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x62, 0x5f, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa4, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x42, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a,
	0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xb6, 0x01, 0x0a, 0x19, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x48, 0x0a, 0x1a, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x54, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x59, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62,
	0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x9f, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x49, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x9d, 0x01, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x37, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x59, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x22, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x65, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77,
	0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x10, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x7a, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x74, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x8c,
	0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x10,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xbf, 0x01,
	0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x6c, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4f, 0x6c, 0x64, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x65, 0x77,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x4e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x44, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63,
	0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xd9, 0x01, 0x0a, 0x1b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x0a,
	0x0c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x4a, 0x0a, 0x1c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x66, 0x0a,
	0x0c, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x3b, 0x0a, 0x0d, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0b,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x12, 0x4b, 0x69, 0x63, 0x6b, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x6b, 0x69, 0x63, 0x6b, 0x65,
	0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x09, 0x49, 0x64,
	0x32, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7b, 0x0a, 0x13, 0x4b, 0x69, 0x63, 0x6b,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0f, 0x69,
	0x64, 0x32, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x49, 0x64, 0x32,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x69, 0x64, 0x32, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x2f, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x9d, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x2f, 0x0a, 0x14, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x7d, 0x0a, 0x15, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f,
	0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0f, 0x69, 0x64, 0x32, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x49, 0x64, 0x32, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0d, 0x69, 0x64, 0x32, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x8f, 0x01, 0x0a, 0x08, 0x43, 0x4d, 0x53, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2f, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a,
	0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x97,
	0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2e, 0x0a, 0x0a, 0x63, 0x6d, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x4d, 0x53, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x63, 0x6d, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x38, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x6b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x62, 0x5f, 0x77, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6d, 0x73, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x43, 0x4d, 0x53, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x63, 0x6d,
	0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62,
	0x5f, 0x77, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x75, 0x6d, 0x22, 0x51,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x6d, 0x0a, 0x15, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x18, 0x0a, 0x16, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4e,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x11,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x40, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x6d, 0x73, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x43, 0x4d, 0x53, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x08, 0x63, 0x6d, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x22, 0xac, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x4d, 0x53, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x5f,
	0x77, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30,
	0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x5f, 0x77, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x8c, 0x01, 0x0a,
	0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x43, 0x4d, 0x53, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x19, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x43, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x4d,
	0x53, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x22, 0x68, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x10,
	0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a,
	0x12, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x75,
	0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22,
	0x41, 0x0a, 0x13, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x22, 0x71, 0x0a, 0x18, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x19, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d,
	0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x65,
	0x0a, 0x0c, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0d, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22,
	0x41, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2a, 0x41, 0x0a,
	0x18, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x55, 0x54, 0x45, 0x4c, 0x59, 0x10, 0x02,
	0x32, 0xc8, 0x13, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x4b, 0x0a, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f,
	0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x16, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x12, 0x20, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x15, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x09, 0x71, 0x75, 0x69, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x13, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x51, 0x75, 0x69, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42,
	0x0a, 0x0d, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x17, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x23, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a,
	0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x63, 0x0a, 0x18, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x23, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0f, 0x6b,
	0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x13, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0f, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x15, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x43, 0x4d, 0x53, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43,
	0x4d, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x4d, 0x53,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x4d, 0x53, 0x12, 0x1f, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x4d, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x51, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x43, 0x4d, 0x53, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41,
	0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x4d,
	0x53, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x64, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x4d, 0x53, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x69, 0x73, 0x6d,
	0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0f, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a,
	0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x09, 0x4d, 0x75,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x13, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x48, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d,
	0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x16,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x12, 0x5a, 0x10, 0x2e,
	0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x3b, 0x70, 0x62, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_group_group_proto_rawDescOnce sync.Once
	file_group_group_proto_rawDescData = file_group_group_proto_rawDesc
)

func file_group_group_proto_rawDescGZIP() []byte {
	file_group_group_proto_rawDescOnce.Do(func() {
		file_group_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_group_group_proto_rawDescData)
	})
	return file_group_group_proto_rawDescData
}

var file_group_group_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_group_group_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_group_group_proto_goTypes = []interface{}{
	(HANDLE_JOIN_GROUP_RESULT)(0),         // 0: group.HANDLE_JOIN_GROUP_RESULT
	(*RequestJoinGroupReq)(nil),           // 1: group.RequestJoinGroupReq
	(*RequestJoinGroupResp)(nil),          // 2: group.RequestJoinGroupResp
	(*HandleRequestJoinGroupReq)(nil),     // 3: group.HandleRequestJoinGroupReq
	(*HandleRequestJoinGroupResp)(nil),    // 4: group.HandleRequestJoinGroupResp
	(*GetGroupAllMemberReq)(nil),          // 5: group.GetGroupAllMemberReq
	(*GetGroupAllMemberResp)(nil),         // 6: group.GetGroupAllMemberResp
	(*GetGroupAllMemberBasicReq)(nil),     // 7: group.GetGroupAllMemberBasicReq
	(*GetGroupAllMemberBasicResp)(nil),    // 8: group.GetGroupAllMemberBasicResp
	(*GetGroupMemberListReq)(nil),         // 9: group.GetGroupMemberListReq
	(*GetGroupMemberListResp)(nil),        // 10: group.GetGroupMemberListResp
	(*GroupMemberInfo)(nil),               // 11: group.GroupMemberInfo
	(*CreateGroupReq)(nil),                // 12: group.CreateGroupReq
	(*CreateGroupResp)(nil),               // 13: group.CreateGroupResp
	(*GetGroupsInfoReq)(nil),              // 14: group.GetGroupsInfoReq
	(*GetGroupsInfoResp)(nil),             // 15: group.GetGroupsInfoResp
	(*SetGroupInfoReq)(nil),               // 16: group.SetGroupInfoReq
	(*SetGroupInfoResp)(nil),              // 17: group.SetGroupInfoResp
	(*GetGroupApplicationListReq)(nil),    // 18: group.GetGroupApplicationListReq
	(*GetGroupApplicationListResp)(nil),   // 19: group.GetGroupApplicationListResp
	(*GetUserReqApplicationListReq)(nil),  // 20: group.GetUserReqApplicationListReq
	(*GetUserReqApplicationListResp)(nil), // 21: group.GetUserReqApplicationListResp
	(*TransferGroupOwnerReq)(nil),         // 22: group.TransferGroupOwnerReq
	(*TransferGroupOwnerResp)(nil),        // 23: group.TransferGroupOwnerResp
	(*GroupApplicationResponseReq)(nil),   // 24: group.GroupApplicationResponseReq
	(*GroupApplicationResponseResp)(nil),  // 25: group.GroupApplicationResponseResp
	(*QuitGroupReq)(nil),                  // 26: group.QuitGroupReq
	(*QuitGroupResp)(nil),                 // 27: group.QuitGroupResp
	(*GetGroupMembersInfoReq)(nil),        // 28: group.GetGroupMembersInfoReq
	(*GetGroupMembersInfoResp)(nil),       // 29: group.GetGroupMembersInfoResp
	(*KickGroupMemberReq)(nil),            // 30: group.KickGroupMemberReq
	(*Id2Result)(nil),                     // 31: group.Id2Result
	(*KickGroupMemberResp)(nil),           // 32: group.KickGroupMemberResp
	(*GetJoinedGroupListReq)(nil),         // 33: group.GetJoinedGroupListReq
	(*GetJoinedGroupListResp)(nil),        // 34: group.GetJoinedGroupListResp
	(*InviteUserToGroupReq)(nil),          // 35: group.InviteUserToGroupReq
	(*InviteUserToGroupResp)(nil),         // 36: group.InviteUserToGroupResp
	(*CMSGroup)(nil),                      // 37: group.CMSGroup
	(*GetGroupReq)(nil),                   // 38: group.GetGroupReq
	(*GetGroupResp)(nil),                  // 39: group.GetGroupResp
	(*GetGroupsReq)(nil),                  // 40: group.GetGroupsReq
	(*GetGroupsResp)(nil),                 // 41: group.GetGroupsResp
	(*GetGroupMemberReq)(nil),             // 42: group.GetGroupMemberReq
	(*OperateGroupStatusReq)(nil),         // 43: group.OperateGroupStatusReq
	(*OperateGroupStatusResp)(nil),        // 44: group.OperateGroupStatusResp
	(*OperateUserRoleReq)(nil),            // 45: group.OperateUserRoleReq
	(*OperateUserRoleResp)(nil),           // 46: group.OperateUserRoleResp
	(*DeleteGroupReq)(nil),                // 47: group.DeleteGroupReq
	(*DeleteGroupResp)(nil),               // 48: group.DeleteGroupResp
	(*GetGroupByIdReq)(nil),               // 49: group.GetGroupByIdReq
	(*GetGroupByIdResp)(nil),              // 50: group.GetGroupByIdResp
	(*GetGroupMembersCMSReq)(nil),         // 51: group.GetGroupMembersCMSReq
	(*GetGroupMembersCMSResp)(nil),        // 52: group.GetGroupMembersCMSResp
	(*RemoveGroupMembersCMSReq)(nil),      // 53: group.RemoveGroupMembersCMSReq
	(*RemoveGroupMembersCMSResp)(nil),     // 54: group.RemoveGroupMembersCMSResp
	(*AddGroupMembersCMSReq)(nil),         // 55: group.AddGroupMembersCMSReq
	(*AddGroupMembersCMSResp)(nil),        // 56: group.AddGroupMembersCMSResp
	(*DismissGroupReq)(nil),               // 57: group.DismissGroupReq
	(*DismissGroupResp)(nil),              // 58: group.DismissGroupResp
	(*MuteGroupMemberReq)(nil),            // 59: group.MuteGroupMemberReq
	(*MuteGroupMemberResp)(nil),           // 60: group.MuteGroupMemberResp
	(*CancelMuteGroupMemberReq)(nil),      // 61: group.CancelMuteGroupMemberReq
	(*CancelMuteGroupMemberResp)(nil),     // 62: group.CancelMuteGroupMemberResp
	(*MuteGroupReq)(nil),                  // 63: group.MuteGroupReq
	(*MuteGroupResp)(nil),                 // 64: group.MuteGroupResp
	(*CancelMuteGroupReq)(nil),            // 65: group.CancelMuteGroupReq
	(*CancelMuteGroupResp)(nil),           // 66: group.CancelMuteGroupResp
	(*SetGroupMemberNicknameReq)(nil),     // 67: group.SetGroupMemberNicknameReq
	(*SetGroupMemberNicknameResp)(nil),    // 68: group.SetGroupMemberNicknameResp
	(*pb_com.CommonResp)(nil),             // 69: pb_com.CommonResp
	(*pb_ws.GroupMemberInfo)(nil),         // 70: pb_ws.GroupMemberInfo
	(*pb_ws.GroupInfo)(nil),               // 71: pb_ws.GroupInfo
	(*pb_ws.GroupRequest)(nil),            // 72: pb_ws.GroupRequest
	(*pb_ws.RequestPagination)(nil),       // 73: pb_ws.RequestPagination
	(*pb_ws.ResponsePagination)(nil),      // 74: pb_ws.ResponsePagination
}
var file_group_group_proto_depIdxs = []int32{
	69, // 0: group.RequestJoinGroupResp.common:type_name -> pb_com.CommonResp
	69, // 1: group.HandleRequestJoinGroupResp.common:type_name -> pb_com.CommonResp
	69, // 2: group.GetGroupAllMemberResp.common:type_name -> pb_com.CommonResp
	70, // 3: group.GetGroupAllMemberResp.member_list:type_name -> pb_ws.GroupMemberInfo
	69, // 4: group.GetGroupAllMemberBasicResp.common:type_name -> pb_com.CommonResp
	11, // 5: group.GetGroupAllMemberBasicResp.member_list:type_name -> group.GroupMemberInfo
	69, // 6: group.GetGroupMemberListResp.common:type_name -> pb_com.CommonResp
	70, // 7: group.GetGroupMemberListResp.member_list:type_name -> pb_ws.GroupMemberInfo
	11, // 8: group.CreateGroupReq.member_list:type_name -> group.GroupMemberInfo
	71, // 9: group.CreateGroupReq.group_info:type_name -> pb_ws.GroupInfo
	69, // 10: group.CreateGroupResp.common:type_name -> pb_com.CommonResp
	71, // 11: group.CreateGroupResp.group_info:type_name -> pb_ws.GroupInfo
	69, // 12: group.GetGroupsInfoResp.common:type_name -> pb_com.CommonResp
	71, // 13: group.GetGroupsInfoResp.group_info_list:type_name -> pb_ws.GroupInfo
	71, // 14: group.SetGroupInfoReq.group_info:type_name -> pb_ws.GroupInfo
	69, // 15: group.SetGroupInfoResp.common:type_name -> pb_com.CommonResp
	72, // 16: group.GetGroupApplicationListResp.GroupRequestList:type_name -> pb_ws.GroupRequest
	69, // 17: group.GetUserReqApplicationListResp.common:type_name -> pb_com.CommonResp
	72, // 18: group.GetUserReqApplicationListResp.GroupRequestList:type_name -> pb_ws.GroupRequest
	69, // 19: group.TransferGroupOwnerResp.common:type_name -> pb_com.CommonResp
	69, // 20: group.GroupApplicationResponseResp.common:type_name -> pb_com.CommonResp
	69, // 21: group.QuitGroupResp.common:type_name -> pb_com.CommonResp
	69, // 22: group.GetGroupMembersInfoResp.common:type_name -> pb_com.CommonResp
	70, // 23: group.GetGroupMembersInfoResp.member_list:type_name -> pb_ws.GroupMemberInfo
	69, // 24: group.KickGroupMemberResp.common:type_name -> pb_com.CommonResp
	31, // 25: group.KickGroupMemberResp.id2_result_list:type_name -> group.Id2Result
	69, // 26: group.GetJoinedGroupListResp.common:type_name -> pb_com.CommonResp
	71, // 27: group.GetJoinedGroupListResp.group_list:type_name -> pb_ws.GroupInfo
	69, // 28: group.InviteUserToGroupResp.common:type_name -> pb_com.CommonResp
	31, // 29: group.InviteUserToGroupResp.id2_result_list:type_name -> group.Id2Result
	71, // 30: group.CMSGroup.group_info:type_name -> pb_ws.GroupInfo
	73, // 31: group.GetGroupReq.pagination:type_name -> pb_ws.RequestPagination
	37, // 32: group.GetGroupResp.cms_groups:type_name -> group.CMSGroup
	73, // 33: group.GetGroupResp.pagination:type_name -> pb_ws.RequestPagination
	73, // 34: group.GetGroupsReq.pagination:type_name -> pb_ws.RequestPagination
	37, // 35: group.GetGroupsResp.cms_groups:type_name -> group.CMSGroup
	73, // 36: group.GetGroupsResp.pagination:type_name -> pb_ws.RequestPagination
	37, // 37: group.GetGroupByIdResp.cms_group:type_name -> group.CMSGroup
	73, // 38: group.GetGroupMembersCMSReq.pagination:type_name -> pb_ws.RequestPagination
	70, // 39: group.GetGroupMembersCMSResp.members:type_name -> pb_ws.GroupMemberInfo
	74, // 40: group.GetGroupMembersCMSResp.pagination:type_name -> pb_ws.ResponsePagination
	69, // 41: group.DismissGroupResp.common:type_name -> pb_com.CommonResp
	69, // 42: group.MuteGroupMemberResp.common:type_name -> pb_com.CommonResp
	69, // 43: group.CancelMuteGroupMemberResp.common:type_name -> pb_com.CommonResp
	69, // 44: group.MuteGroupResp.common:type_name -> pb_com.CommonResp
	69, // 45: group.CancelMuteGroupResp.common:type_name -> pb_com.CommonResp
	69, // 46: group.SetGroupMemberNicknameResp.common:type_name -> pb_com.CommonResp
	1,  // 47: group.group.requestJoinGroup:input_type -> group.RequestJoinGroupReq
	3,  // 48: group.group.handleRequestJoinGroup:input_type -> group.HandleRequestJoinGroupReq
	5,  // 49: group.group.getGroupAllMember:input_type -> group.GetGroupAllMemberReq
	7,  // 50: group.group.getGroupAllMemberBasic:input_type -> group.GetGroupAllMemberBasicReq
	9,  // 51: group.group.getGroupMemberList:input_type -> group.GetGroupMemberListReq
	12, // 52: group.group.createGroup:input_type -> group.CreateGroupReq
	26, // 53: group.group.quitGroup:input_type -> group.QuitGroupReq
	14, // 54: group.group.getGroupsInfo:input_type -> group.GetGroupsInfoReq
	16, // 55: group.group.setGroupInfo:input_type -> group.SetGroupInfoReq
	18, // 56: group.group.getGroupApplicationList:input_type -> group.GetGroupApplicationListReq
	20, // 57: group.group.getUserReqApplicationList:input_type -> group.GetUserReqApplicationListReq
	22, // 58: group.group.transferGroupOwner:input_type -> group.TransferGroupOwnerReq
	24, // 59: group.group.groupApplicationResponse:input_type -> group.GroupApplicationResponseReq
	28, // 60: group.group.getGroupMembersInfo:input_type -> group.GetGroupMembersInfoReq
	30, // 61: group.group.kickGroupMember:input_type -> group.KickGroupMemberReq
	33, // 62: group.group.getJoinedGroupList:input_type -> group.GetJoinedGroupListReq
	35, // 63: group.group.inviteUserToGroup:input_type -> group.InviteUserToGroupReq
	49, // 64: group.group.GetGroupById:input_type -> group.GetGroupByIdReq
	38, // 65: group.group.GetGroup:input_type -> group.GetGroupReq
	40, // 66: group.group.GetGroups:input_type -> group.GetGroupsReq
	43, // 67: group.group.OperateGroupStatus:input_type -> group.OperateGroupStatusReq
	45, // 68: group.group.OperateUserRole:input_type -> group.OperateUserRoleReq
	47, // 69: group.group.DeleteGroup:input_type -> group.DeleteGroupReq
	51, // 70: group.group.GetGroupMembersCMS:input_type -> group.GetGroupMembersCMSReq
	53, // 71: group.group.RemoveGroupMembersCMS:input_type -> group.RemoveGroupMembersCMSReq
	55, // 72: group.group.AddGroupMembersCMS:input_type -> group.AddGroupMembersCMSReq
	57, // 73: group.group.DismissGroup:input_type -> group.DismissGroupReq
	59, // 74: group.group.MuteGroupMember:input_type -> group.MuteGroupMemberReq
	61, // 75: group.group.CancelMuteGroupMember:input_type -> group.CancelMuteGroupMemberReq
	63, // 76: group.group.MuteGroup:input_type -> group.MuteGroupReq
	65, // 77: group.group.CancelMuteGroup:input_type -> group.CancelMuteGroupReq
	67, // 78: group.group.SetGroupMemberNickname:input_type -> group.SetGroupMemberNicknameReq
	2,  // 79: group.group.requestJoinGroup:output_type -> group.RequestJoinGroupResp
	4,  // 80: group.group.handleRequestJoinGroup:output_type -> group.HandleRequestJoinGroupResp
	6,  // 81: group.group.getGroupAllMember:output_type -> group.GetGroupAllMemberResp
	8,  // 82: group.group.getGroupAllMemberBasic:output_type -> group.GetGroupAllMemberBasicResp
	10, // 83: group.group.getGroupMemberList:output_type -> group.GetGroupMemberListResp
	13, // 84: group.group.createGroup:output_type -> group.CreateGroupResp
	27, // 85: group.group.quitGroup:output_type -> group.QuitGroupResp
	15, // 86: group.group.getGroupsInfo:output_type -> group.GetGroupsInfoResp
	17, // 87: group.group.setGroupInfo:output_type -> group.SetGroupInfoResp
	19, // 88: group.group.getGroupApplicationList:output_type -> group.GetGroupApplicationListResp
	21, // 89: group.group.getUserReqApplicationList:output_type -> group.GetUserReqApplicationListResp
	23, // 90: group.group.transferGroupOwner:output_type -> group.TransferGroupOwnerResp
	25, // 91: group.group.groupApplicationResponse:output_type -> group.GroupApplicationResponseResp
	29, // 92: group.group.getGroupMembersInfo:output_type -> group.GetGroupMembersInfoResp
	32, // 93: group.group.kickGroupMember:output_type -> group.KickGroupMemberResp
	34, // 94: group.group.getJoinedGroupList:output_type -> group.GetJoinedGroupListResp
	36, // 95: group.group.inviteUserToGroup:output_type -> group.InviteUserToGroupResp
	50, // 96: group.group.GetGroupById:output_type -> group.GetGroupByIdResp
	39, // 97: group.group.GetGroup:output_type -> group.GetGroupResp
	41, // 98: group.group.GetGroups:output_type -> group.GetGroupsResp
	44, // 99: group.group.OperateGroupStatus:output_type -> group.OperateGroupStatusResp
	46, // 100: group.group.OperateUserRole:output_type -> group.OperateUserRoleResp
	48, // 101: group.group.DeleteGroup:output_type -> group.DeleteGroupResp
	52, // 102: group.group.GetGroupMembersCMS:output_type -> group.GetGroupMembersCMSResp
	54, // 103: group.group.RemoveGroupMembersCMS:output_type -> group.RemoveGroupMembersCMSResp
	56, // 104: group.group.AddGroupMembersCMS:output_type -> group.AddGroupMembersCMSResp
	58, // 105: group.group.DismissGroup:output_type -> group.DismissGroupResp
	60, // 106: group.group.MuteGroupMember:output_type -> group.MuteGroupMemberResp
	62, // 107: group.group.CancelMuteGroupMember:output_type -> group.CancelMuteGroupMemberResp
	64, // 108: group.group.MuteGroup:output_type -> group.MuteGroupResp
	66, // 109: group.group.CancelMuteGroup:output_type -> group.CancelMuteGroupResp
	68, // 110: group.group.SetGroupMemberNickname:output_type -> group.SetGroupMemberNicknameResp
	79, // [79:111] is the sub-list for method output_type
	47, // [47:79] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_group_group_proto_init() }
func file_group_group_proto_init() {
	if File_group_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_group_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestJoinGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestJoinGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRequestJoinGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRequestJoinGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupAllMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupAllMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupAllMemberBasicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupAllMemberBasicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupApplicationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupApplicationListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReqApplicationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReqApplicationListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferGroupOwnerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferGroupOwnerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupApplicationResponseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupApplicationResponseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMembersInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMembersInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id2Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickGroupMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJoinedGroupListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJoinedGroupListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteUserToGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteUserToGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMSGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateGroupStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateGroupStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateUserRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateUserRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMembersCMSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMembersCMSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupMembersCMSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupMembersCMSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupMembersCMSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupMembersCMSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DismissGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DismissGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteGroupMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMuteGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMuteGroupMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMuteGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMuteGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupMemberNicknameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_group_group_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupMemberNicknameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_group_group_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_group_group_proto_goTypes,
		DependencyIndexes: file_group_group_proto_depIdxs,
		EnumInfos:         file_group_group_proto_enumTypes,
		MessageInfos:      file_group_group_proto_msgTypes,
	}.Build()
	File_group_group_proto = out.File
	file_group_group_proto_rawDesc = nil
	file_group_group_proto_goTypes = nil
	file_group_group_proto_depIdxs = nil
}
